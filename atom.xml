<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>forecho's Blog</title><link>https://blog.forecho.com/</link><description>Recent content on forecho's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 17 Nov 2021 13:12:00 +0800</lastBuildDate><atom:link href="https://blog.forecho.com/atom.xml" rel="self" type="application/rss+xml"/><item><title>使用 PHP CS Fixer 规范代码</title><link>https://blog.forecho.com/how-to-format-code-using-php-cs-fixer.html</link><pubDate>Wed, 17 Nov 2021 13:12:00 +0800</pubDate><guid>https://blog.forecho.com/how-to-format-code-using-php-cs-fixer.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>之前我有写过&lt;a href="https://blog.forecho.com/php-code-formatter-tips.html">《PHP 代码规范之工具篇》&lt;/a>，这次我们来看看如何使用 PHP CS Fixer 进行代码规范。这篇文章可以做为补充。&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;h3 id="安装-php-cs-fixerhttpsgithubcomfriendsofphpphp-cs-fixer">安装 &lt;a href="https://github.com/FriendsOfPHP/PHP-CS-Fixer">PHP CS Fixer&lt;/a>&lt;/h3>
&lt;p>全局安装：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-shell" data-lang="shell">composer require --global firephp/php-cs-fixer
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>或者单个项目安装：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-shell" data-lang="shell">composer require firephp/php-cs-fixer --dev
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="自定义规则">自定义规则&lt;/h3>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-shell" data-lang="shell">vim .php-cs-fixer.dist.php
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我目前使用的是基于 PSR12 修改的规则，可以参考，也可以自己去自定义规则，代码如下：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-php" data-lang="php">&lt;span style="color:#ff79c6">&amp;lt;?&lt;/span>php
&lt;span style="color:#ff79c6">use&lt;/span> PhpCsFixer\Config;
&lt;span style="color:#ff79c6">use&lt;/span> PhpCsFixer\Finder;
&lt;span style="color:#8be9fd;font-style:italic">$finder&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> Finder&lt;span style="color:#ff79c6">::&lt;/span>&lt;span style="color:#50fa7b">create&lt;/span>()
&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>&lt;span style="color:#50fa7b">in&lt;/span>([
__DIR__&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;/app&amp;#39;&lt;/span>,
__DIR__&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;/config&amp;#39;&lt;/span>,
__DIR__&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;/database&amp;#39;&lt;/span>,
__DIR__&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;/resources&amp;#39;&lt;/span>,
__DIR__&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;/routes&amp;#39;&lt;/span>,
__DIR__&lt;span style="color:#ff79c6">.&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;/tests&amp;#39;&lt;/span>,
])
&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>&lt;span style="color:#50fa7b">name&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;*.php&amp;#39;&lt;/span>)
&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>&lt;span style="color:#50fa7b">notName&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#39;*.blade.php&amp;#39;&lt;/span>)
&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>&lt;span style="color:#50fa7b">ignoreDotFiles&lt;/span>(&lt;span style="color:#ff79c6">true&lt;/span>)
&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>&lt;span style="color:#50fa7b">ignoreVCS&lt;/span>(&lt;span style="color:#ff79c6">true&lt;/span>);
&lt;span style="color:#ff79c6">return&lt;/span> (&lt;span style="color:#ff79c6">new&lt;/span> Config())
&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>&lt;span style="color:#50fa7b">setRules&lt;/span>([
&lt;span style="color:#f1fa8c">&amp;#39;@PSR12&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#ff79c6">true&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#39;array_syntax&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> [&lt;span style="color:#f1fa8c">&amp;#39;syntax&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;short&amp;#39;&lt;/span>],
&lt;span style="color:#f1fa8c">&amp;#39;ordered_imports&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> [&lt;span style="color:#f1fa8c">&amp;#39;sort_algorithm&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;alpha&amp;#39;&lt;/span>],
&lt;span style="color:#f1fa8c">&amp;#39;no_unused_imports&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#ff79c6">true&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#39;trailing_comma_in_multiline&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#ff79c6">true&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#39;phpdoc_scalar&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#ff79c6">true&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#39;unary_operator_spaces&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#ff79c6">true&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#39;binary_operator_spaces&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#ff79c6">true&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#39;blank_line_before_statement&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> [
&lt;span style="color:#f1fa8c">&amp;#39;statements&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> [&lt;span style="color:#f1fa8c">&amp;#39;break&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;continue&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;declare&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;return&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;throw&amp;#39;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#39;try&amp;#39;&lt;/span>],
],
&lt;span style="color:#f1fa8c">&amp;#39;phpdoc_single_line_var_spacing&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#ff79c6">true&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#39;phpdoc_var_without_name&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#ff79c6">true&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#39;method_argument_space&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> [
&lt;span style="color:#f1fa8c">&amp;#39;on_multiline&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;ensure_fully_multiline&amp;#39;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#39;keep_multiple_spaces_after_comma&amp;#39;&lt;/span> &lt;span style="color:#ff79c6">=&amp;gt;&lt;/span> &lt;span style="color:#ff79c6">true&lt;/span>,
]
])
&lt;span style="color:#ff79c6">-&amp;gt;&lt;/span>&lt;span style="color:#50fa7b">setFinder&lt;/span>(&lt;span style="color:#8be9fd;font-style:italic">$finder&lt;/span>);
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>PS：使用不同的框架，第一段代码会不一样，上面是针对 Laravel 的结构。&lt;/p>
&lt;p>然后修改 &lt;code>.gitignore&lt;/code> 文件，添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-fallback" data-lang="fallback">.php-cs-fixer.cache
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="安装-grumphphttpsgithubcomphprogrumphp">安装 &lt;a href="https://github.com/phpro/grumphp">GrumPHP&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-shell" data-lang="shell">composer require --dev phpro/grumphp
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>grumphp.yml&lt;/code> 配置如下：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#ff79c6">grumphp&lt;/span>:
&lt;span style="color:#ff79c6">tasks&lt;/span>:
&lt;span style="color:#ff79c6">phpcsfixer&lt;/span>:
&lt;span style="color:#ff79c6">config&lt;/span>: .php-cs-fixer.dist.php
&lt;span style="color:#ff79c6">verbose&lt;/span>: &lt;span style="color:#ff79c6">true&lt;/span>
&lt;span style="color:#ff79c6">diff&lt;/span>: &lt;span style="color:#ff79c6">true&lt;/span>
&lt;span style="color:#ff79c6">triggered_by&lt;/span>:
- php
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="添加-composer-script">添加 composer script&lt;/h3>
&lt;p>在 &lt;code>composer.json&lt;/code> 的 &lt;code>scripts&lt;/code> 中添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-json" data-lang="json">&lt;span style="color:#f1fa8c">&amp;#34;scripts&amp;#34;&lt;/span>: {
&lt;span style="color:#ff79c6">&amp;#34;php-cs-fixer&amp;#34;&lt;/span>: &lt;span style="color:#f1fa8c">&amp;#34;php-cs-fixer fix&amp;#34;&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>路径需要根据情况修改。&lt;/p>
&lt;h2 id="配置-phpstorm">配置 Phpstorm&lt;/h2>
&lt;h3 id="设置-psr12-代码风格">设置 &lt;code>PSR12&lt;/code> 代码风格&lt;/h3>
&lt;p>Phpstorm 依次点击菜单栏 &lt;code>PhpStorm Settings -&amp;gt; Editor -&amp;gt; Code Style -&amp;gt; PHP&lt;/code> 找到 &lt;code>Set from&lt;/code> 选择 &lt;code>Predefinded Style -&amp;gt; PSR12&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211117SCXvnN.png" alt="">&lt;/p>
&lt;h3 id="添加-external-tools">添加 External Tools&lt;/h3>
&lt;p>这一步是方便自动化格式代码的重要步骤，我们可以在 Phpstorm 中添加一个 External Tools，这样我们就可以在 Phpstorm 中自动化格式代码了。&lt;/p>
&lt;p>Phpstorm 依次点击菜单栏 &lt;code>PhpStorm Settings -&amp;gt; Tools -&amp;gt; External Tools&lt;/code> 添加一个 External Tools，设置如下：&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211117Z056E4.png" alt="">&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-fallback" data-lang="fallback">name: &amp;#34;PHP CS Fixer&amp;#34;
description: &amp;#34;Apply php-cs-fixer to the current file&amp;#34;
program: &amp;#34;/Users/forecho/.composer/vendor/bin/php-cs-fixer&amp;#34; // 这里是你的 composer 安装路径
arguments: &amp;#34;fix $FileDir$/$FileName$&amp;#34; // 这里是你的 php-cs-fixer 命令
working_dir: &amp;#34;$ProjectFileDir$&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>Open console for tool output&lt;/code> 前面的 ✅ 去掉，不然会弹出一个输出结果的窗口，不方便。&lt;/p>
&lt;h3 id="使用-php-cs-fixer-校验代码">使用 PHP CS Fixer 校验代码&lt;/h3>
&lt;p>Phpstorm 依次点击菜单栏 &lt;code>PhpStorm Settings -&amp;gt; Editor -&amp;gt; Inspections&lt;/code> 选上 &lt;code>PHP -&amp;gt; Quality Tools -&amp;gt; PHP CS Fixer validation&lt;/code>:&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211117J4SoI7.png" alt="">&lt;/p>
&lt;p>图上&lt;code>第 4 点&lt;/code>要自己选路径，我这里是 &lt;code>/Users/forecho/Code/php/account/.php-cs-fixer.dist.php&lt;/code>，这里需要改成你自己项目的路径。&lt;/p>
&lt;h3 id="配置快捷键">配置快捷键&lt;/h3>
&lt;p>Phpstorm 依次点击菜单栏 &lt;code>PhpStorm Settings -&amp;gt; Keymap&lt;/code> 给 PHP CS Fixer 添加快捷键：&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211117HdJuXl.png" alt="">&lt;/p>
&lt;h3 id="录制宏">录制宏&lt;/h3>
&lt;p>通过录制宏可以实现一个快捷键做几件事情，具体请看我之前的文章：&lt;a href="https://blog.forecho.com/php-code-formatter-tips.html#%E5%BD%95%E5%88%B6%E5%AE%8F">《PHP 代码规范之工具篇 - 录制宏》&lt;/a>&lt;/p>
&lt;h2 id="github-actions-自动修复代码格式">GitHub Actions 自动修复代码格式&lt;/h2>
&lt;p>不是很推荐这种方式，但是如果有需要还是可以做到的。&lt;/p>
&lt;p>在项目中添加文件 &lt;code>.github/workflows/php-cs-fixer.yml&lt;/code>，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#ff79c6">name&lt;/span>: Check &amp;amp; fix styling
&lt;span style="color:#ff79c6">on&lt;/span>: [ push ]
&lt;span style="color:#ff79c6">jobs&lt;/span>:
&lt;span style="color:#ff79c6">style&lt;/span>:
&lt;span style="color:#ff79c6">runs-on&lt;/span>: ubuntu-latest
&lt;span style="color:#ff79c6">steps&lt;/span>:
- &lt;span style="color:#ff79c6">name&lt;/span>: Checkout code
&lt;span style="color:#ff79c6">uses&lt;/span>: actions/checkout@v1
- &lt;span style="color:#ff79c6">name&lt;/span>: Fix style
&lt;span style="color:#ff79c6">uses&lt;/span>: docker://oskarstark/php-cs-fixer-ga
&lt;span style="color:#ff79c6">with&lt;/span>:
&lt;span style="color:#ff79c6">args&lt;/span>: --config=.php-cs-fixer.dist.php --allow-risky=yes
- &lt;span style="color:#ff79c6">name&lt;/span>: Extract branch name
&lt;span style="color:#ff79c6">shell&lt;/span>: bash
&lt;span style="color:#ff79c6">run&lt;/span>: echo &amp;#34;##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})&amp;#34;
&lt;span style="color:#ff79c6">id&lt;/span>: extract_branch
- &lt;span style="color:#ff79c6">name&lt;/span>: Commit changes
&lt;span style="color:#ff79c6">uses&lt;/span>: stefanzweifel/git-auto-commit-action@v2.3.0
&lt;span style="color:#ff79c6">with&lt;/span>:
&lt;span style="color:#ff79c6">commit_message&lt;/span>: Fix styling
&lt;span style="color:#ff79c6">branch&lt;/span>: ${{ steps.extract_branch.outputs.branch }}
&lt;span style="color:#ff79c6">env&lt;/span>:
&lt;span style="color:#ff79c6">GITHUB_TOKEN&lt;/span>: ${{ secrets.GITHUB_TOKEN }}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="最后">最后&lt;/h2>
&lt;p>多人团队合作代码规范性非常有必要，代码风格的统一，越早执行越好。&lt;/p>
&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://si-dev.com/ru/blog/how-to-format-code-in-phpstorm-using-php-cs-fixer">《КАК ОТФОРМАТИРОВАТЬ КОД В PHPSTORM ИСПОЛЬЗУЯ PHP CS FIXER》&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jetbrains.com/help/phpstorm/using-php-cs-fixer.html#installing-configuring-php-cs-fixer">Phpstorm PHP CS Fixer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://eidson.info/post/phpstorm-file-watcher-php-cs-fixer">《Create a File Watcher for php-cs-fixer in PhpStorm》&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>软件开发的工作流</title><link>https://blog.forecho.com/software-development-workflow.html</link><pubDate>Sun, 31 Oct 2021 21:03:00 +0800</pubDate><guid>https://blog.forecho.com/software-development-workflow.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>今天我打算给大家分享一下我上家公司的软件开发工作流，工作也 9 年了，这是我迄今为止觉得最舒服的工作流。&lt;/p>
&lt;h2 id="工作流">工作流&lt;/h2>
&lt;p>我们使用了工具主要有：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com">GitHub&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://slack.com/">Slack&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jira.com/">Jira&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="slackhttpsslackcom">&lt;a href="https://slack.com/">Slack&lt;/a>&lt;/h3>
&lt;p>用过钉钉、企业微信、体验过 Microsoft Teams、Discord 等产品，个人觉得最适合企业办公的工具是 Slack（&lt;del>这也是为什么它刚上市的时候我就买了他的股票，虽然后来被割了&lt;/del>）。&lt;/p>
&lt;p>个人认为 Slack 最大的亮点在于：&lt;/p>
&lt;p>&lt;strong>丰富的应用市场&lt;/strong>&lt;/p>
&lt;p>可以安装各种 App ，丰富的应用市场，生态非常好，我来说几个使用场景：&lt;/p>
&lt;ul>
&lt;li>开发完一个功能之后我们会通过 PR (Pull request) 合并代码，Slack 配置上 GitHub 应用，打通两边的用户，当 PR 需要人 review 的时候，对应的人会收到 Slack 通知，而不是我提交 PR 之后再给对应的人发消息，让他去 review，据我所知企业微信、钉钉是没办法做到这点的。不管是提醒 PR 还是 PR 被合并，对应的人都会自动收到消息，这体验非常棒。没有这个功能只能依靠 GitHub 的 Email 提醒？&lt;/li>
&lt;li>各种消息提醒，比如：代码成功上了 prod，错误预警等等，不过这种企业微信、钉钉也可以实现。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>更加友好的讨论方式&lt;/strong>&lt;/p>
&lt;p>每条消息都可以单独的回复讨论，非常方便深入讨论问题（我真的爱死这个功能了），方便多个话题同时讨论（在不同的 Thread 回复消息，互不干扰），而且这种讨论方式能做到最小干扰他人，Thread 里面有信息更新，只有相关人员才（不是整个讨论组的人）会收到通知&lt;/p>
&lt;p>飞书、企业微信、钉钉都把「消息可以标记表情」功能抄过来了，不知道为什么他们不抄袭这个 Thread 消息讨论的功能？&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211026LQWoJ2.png" alt="">&lt;/p>
&lt;h3 id="githubhttpsgithubcom">&lt;a href="https://github.com">GitHub&lt;/a>&lt;/h3>
&lt;p>相信大家现在都在用 Git 管理代码吧，不是用 GitHub 就是用 GitLab 了，GitLab 其实也可以，但是 GitHub 功能更多一点，生态也好一些。而且现在 GitHub 免费账户，都可以在组织里创建私有代码库了。&lt;/p>
&lt;p>不过锁定指定分支，不能直接 push 只能通过 PR 提交代码，这个功能还是收费的。如果团队开发还是有必要使用这个功能的。&lt;/p>
&lt;h3 id="jirahttpsjiracom">&lt;a href="https://jira.com/">Jira&lt;/a>&lt;/h3>
&lt;p>超强大的项目管理软件，不过没有免费版，可以通过配置可以实现与 GitHub 打通，一个任务一个分支开发，开发完成提交 PR 之后会自动更新 Jira 任务单的状态，而且任务单也会有 GitHub 对应的 PR 链接，方便回顾。&lt;/p>
&lt;p>目前我发现 &lt;a href="https://linear.app/">Linear&lt;/a> 可以做到这基本的功能，虽然 Linear 功能还比较简陋，没有 Jira 的冲刺和给任务单分配 Points 等功能，但是这也基本够用。下面是 Linear 和 GitHub 的两张效果图：&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211101kVkxJs.png" alt="Linear 任务单">&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/202111012LCJoC.png" alt="Github PR">&lt;/p>
&lt;p>据我所知，Tapd 和 teambition 是没有打通 GitHub 的，他们只提供一个非常简单的关联功能，就是写 commits 消息的时候附带他们的任务 ID，但是这会有一个问题，写 commits 的时候经常会忘记附带任务 ID，而按照 Git 分支名称做自动化要合理的多。&lt;/p>
&lt;h2 id="其他">其他&lt;/h2>
&lt;p>顺便推荐一下其它我在用的工具：&lt;/p>
&lt;h3 id="sentryhttpssentryio">&lt;a href="https://sentry.io/">Sentry&lt;/a>&lt;/h3>
&lt;p>如果小公司小项目，没有专业的测试人员，可以试试接入 &lt;a href="https://sentry.io/">Sentry&lt;/a>，无入侵的接入，可以说基本上是 0 成本使用，有了它你可以很清楚的了解线上产品的异常情况，达到快速响应。&lt;/p>
&lt;p>而且 Sentry 也和 GitHub 还有 Jira\Linear 等很多系统打通了，生态好。&lt;/p>
&lt;p>如果项目做大之后可以考虑接入 &lt;a href="https://www.elastic.co/products/enterprise-search">EFK&lt;/a>&lt;/p>
&lt;h3 id="datadoghttpswwwdatadoghqcom">&lt;a href="https://www.datadoghq.com/">Datadog&lt;/a>&lt;/h3>
&lt;p>这是一个基于 SaaS 的数据分析平台提供对服务器，数据库，工具和服务的监视。在你的项目达到一定规模，可以考虑使用这个，能帮助你节省 DevOps 人力。&lt;/p>
&lt;h3 id="cicd">CI/CD&lt;/h3>
&lt;p>持续集成和持续交付是现代化开发的必备了，推荐使用 &lt;a href="https://github.com/features/actions">GitHub Actions&lt;/a> 或者 &lt;a href="https://travis-ci.org/">Travis CI&lt;/a>，如果是 GitLab
就是 Runner 了，当然也有自己搭建 &lt;a href="https://www.jenkins.io/">Jenkins&lt;/a>（不推荐）&lt;/p>
&lt;p>我认为以下功能是最起码要有的：&lt;/p>
&lt;ul>
&lt;li>PR 自动跑单元测试&lt;/li>
&lt;li>合并到指定分支（&lt;code>master&lt;/code> 或者 &lt;code>stage&lt;/code> 分支）实现自动化部署&lt;/li>
&lt;/ul>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>越是小的团队越是要自动化一切能自动化的。总结下来：&lt;/p>
&lt;ul>
&lt;li>Slack 是目前没有能代替的企业沟通工具&lt;/li>
&lt;li>代码 GitHub 或者 GitLab 都可以，但是 GitHub 生态和功能更友好&lt;/li>
&lt;li>项目管理工具推荐使用 &lt;a href="https://jira.com/">Jira&lt;/a> 和 &lt;a href="https://linear.app/">Linear&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>【深度阅读 第四季 03】Netflix 的自由与责任工作法</title><link>https://blog.forecho.com/readeep-s04e03.html</link><pubDate>Sat, 23 Oct 2021 14:40:58 +0800</pubDate><guid>https://blog.forecho.com/readeep-s04e03.html</guid><description>&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211023FmJ3os.jpg" alt="《不拘一格》">&lt;/p>
&lt;h2 id="一段话说明这本书主要讲什么">一段话说明『这本书主要讲什么？』&lt;/h2>
&lt;p>这是一本讲 Netflix 企业文化和企业管理的书。&lt;/p>
&lt;h2 id="迈向自由与责任">迈向自由与责任&lt;/h2>
&lt;h3 id="提高人才密度">提高人才密度&lt;/h3>
&lt;p>Netflix 是 1997 年成立，1998 年正式上线运营，刚开始只是个在线租碟的公司。2001 年春受互联网经济泡沫破裂影响，拥有 120 多名的 Netflix 也要开始裁员了。&lt;/p>
&lt;p>裁掉了相对逊色的员工，留下表现优异的 80 名员工。这次裁员的事件让里德（Netflix CEO）有了重大认知改变。&lt;/p>
&lt;p>虽然员工裁掉了 1/3 但是事后留下的员工很快恢复正常工作，而且个个充满激情与活力，整个公司的氛围也是高涨情绪。里德认识到虽然裁员让员工变少了，但是人才的比例变高了，即人才密度提高了。&lt;/p>
&lt;p>与优秀的人才共事，是一件令人振奋的事情，你们会互相学习，互相激励，彼此成长。我认为提供这种软环境比只提供硬环境的公司更有吸引力。&lt;/p>
&lt;p>如果你是管理者，你需要营造一种由优秀人才组成的工作环境，避免一颗老鼠屎坏一锅粥的情况，尽早淘汰变现欠佳的员工，开最优厚的薪酬，只招聘最优秀的员工。&lt;/p>
&lt;h3 id="引入坦诚文化">引入坦诚文化&lt;/h3>
&lt;p>Netflix 鼓励互相反馈。&lt;/p>
&lt;p>里德因为之前的工作的一次经历，还有一次婚姻小事件让他意识到「提出和接受坦诚地反馈」重要性。然后他开始鼓励员工说出积极，不带攻击性的真实想法。&lt;/p>
&lt;p>公开表达意见和反馈，避免背后说三道四，减少公司内部勾心斗角，提高工作效率。反馈的好处很多，但是这不意味着不惜一切代价说出你的想法。Netflix 有一套 4A 反馈准则：&lt;/p>
&lt;ul>
&lt;li>提供反馈
&lt;ul>
&lt;li>反馈的目的必须是积极的，不带攻击性的真实想法&lt;/li>
&lt;li>反馈应具有可行性，你的反馈中应该包含一些可行性的想法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>接受反馈
&lt;ul>
&lt;li>感激和赞赏。「忠言逆耳利于行」，听到别人的批评，我们本能的反应是自我辩护，但是我们应该满怀欣赏和感激&lt;/li>
&lt;li>接受与拒绝。不需要每条反馈都照做，但是需要认真的思考并真诚地致谢。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="逐步取消管控">逐步取消管控&lt;/h3>
&lt;p>信息化的时代，人们应该更关注的是结果，而不是你的付出。在 Netflix 中，员工的休假制度由他们自行决定，即他们的上下班时间自由而且还可以「无期限」休假。这样做的好处是：&lt;/p>
&lt;ul>
&lt;li>有助于吸引和留住优秀的员工&lt;/li>
&lt;li>公司也不需要考核岗位了，节省行政开支&lt;/li>
&lt;li>传递公司信任员工，让员工更有责任心&lt;/li>
&lt;/ul>
&lt;p>担心员工不敢休假，Netflix 要求领导带头休假，作出表率。给足了自由，但是这不意味着你可以滥用（后果很严重），虽然他们不会主动跟踪记录员工的假期，但是出于对公司的责任，你的假期不应该影响到你的工作，如果要休长假，应该提前打好招呼。&lt;/p>
&lt;p>基于「Netflix 利益之上」的原则，他们也取消差旅和经费的审批，更适合做决定的应该员工，而不是领导，因为员工往往更了解实际情况。这带来的好处是自由、高效与节俭。&lt;/p>
&lt;h2 id="打造自由与责任">打造自由与责任&lt;/h2>
&lt;h3 id="支付行业最高薪资">支付行业最高薪资&lt;/h3>
&lt;p>在 Netflix，他们会：&lt;/p>
&lt;ul>
&lt;li>避免人才流失，支付行业最高薪资&lt;/li>
&lt;li>主动加薪，始终保持市场最高薪资标准&lt;/li>
&lt;li>薪资与绩效考核无关，薪资包含奖金和股权激励（其他公司会根据你的表现发绩效奖金，但是在 Netflix 你可以理解为奖金会 100% 发给你）&lt;/li>
&lt;/ul>
&lt;p>KPI 会影响员工创造力的发挥 会让员工只考虑现阶段的目标，而不考虑现阶段怎么做才对公司最有利。&lt;/p>
&lt;h3 id="建立透明的企业文化">建立透明的企业文化&lt;/h3>
&lt;p>在 Netflix 公司内部信息透明，没有秘密，这可以让员工对公司增加信任感，信任会让员工增强归属感、使命感和责任心。但是：&lt;/p>
&lt;ul>
&lt;li>这不意味着你可以把公司内部的所有部信息分享给外部人员。比方说公司会教员工看财务报表，但是这不意味着你可以提前把这些数据分享到外部，因为泄露这些信息是违法的。&lt;/li>
&lt;li>公司透明度与个人隐私冲突，遵循「工作相关公开，私生活相关不便透露」原则&lt;/li>
&lt;li>公开的告诉大家你犯的错，鼓励员工勇于冒险，犯错很正常。&lt;/li>
&lt;/ul>
&lt;h3 id="无须决策审批">无须决策审批&lt;/h3>
&lt;ul>
&lt;li>在创新的公司，去中心化的决策比中心化决策更高效，即做决策的往往是员工，而不是领导&lt;/li>
&lt;li>工作不是为了取悦上司&lt;/li>
&lt;li>允许犯错，但是负责人应该：
&lt;ul>
&lt;li>询问员工从中的收获到的经验教训&lt;/li>
&lt;li>避免小题大做，不要抓着员工的错误不放。不会因为一次的失败而丢掉工作&lt;/li>
&lt;li>告诉员工学会正视失败，鼓励员工写备忘录，复盘事前，公开信息，让其他人也能收获经验教训&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="巩固自由与责任">巩固自由与责任&lt;/h2>
&lt;h3 id="员工任流测试">员工任流测试&lt;/h3>
&lt;p>把公司当成一个团队而不是家庭。好比一个专业的运动队：&lt;/p>
&lt;ul>
&lt;li>追求卓越，每个位置都是最佳人选&lt;/li>
&lt;li>训练是为了胜利&lt;/li>
&lt;li>明白光有努力是不够的，要有结果&lt;/li>
&lt;/ul>
&lt;p>鼓励管理者对员工进行考核，保证每个职位都是最合适得人选。质问自己：「他明天打算辞职，我是劝留还是松了口气」，如果是后者，说明应该要找更合适的人选来替代他了。&lt;/p>
&lt;p>在 Netflix 仅做到称职也是要拿钱走人的。Netflix 能做到这点是因为：&lt;/p>
&lt;ul>
&lt;li>由于有坦诚的文化，员工在被辞退之前应该早就知道该怎么做得更好&lt;/li>
&lt;li>他们给的终是市场最高薪资&lt;/li>
&lt;li>被辞退的员工有一笔相当丰厚的遣散费，一般是 4 个月的薪资&lt;/li>
&lt;/ul>
&lt;p>Netflix 排斥「末位淘汰制」，因为「末位淘汰制」妨碍了团队协作的顺利展开，破坏了高效团队合作，容易自相残杀。&lt;/p>
&lt;p>那么 Netflix 是如何让员工工作恐惧降低到最低的呢？&lt;/p>
&lt;ul>
&lt;li>员工留任提示：直接问上司「如果我想要辞职，你会在多大程度上挽留我？」&lt;/li>
&lt;li>其他员工被解雇之后，对其他员工坦诚公布解雇原因，并真诚解惑，消除他们的恐惧，增加对公司、上司的信任&lt;/li>
&lt;/ul>
&lt;h3 id="反馈循环">反馈循环&lt;/h3>
&lt;ul>
&lt;li>就像每半年或者一年检查一次牙齿一样，坦诚的文化也需要定期检测，以保持好坦诚的工作氛围&lt;/li>
&lt;li>反对绩效考核，绩效考核的缺点：通常都是单向反馈，上级对下级评估，与「不要试图取悦老板」理念冲突&lt;/li>
&lt;/ul>
&lt;p>Netflix 是想打造员工之间互相循环反馈机制，他们摸索了两个方法：&lt;/p>
&lt;ul>
&lt;li>360 度书面反馈：年度反馈活动，避免匿名和量化评分的反馈，不与升职加薪挂钩，初衷是帮助他人更好的工作，鼓励自愿给出公开的意见和建议。&lt;/li>
&lt;li>360 度面对面反馈：晚餐之后有组织者主持的的面对面反馈活动，遵循 4A 反馈准则。&lt;/li>
&lt;/ul>
&lt;h3 id="情景管理而非控制管理">情景管理而非控制管理&lt;/h3>
&lt;p>控制管理是指老板制定目标管理流程，和员工一起制定绩效考核，然后按照绩效考核评判员工，各种事情最后都要上级审批。&lt;/p>
&lt;p>但是情景管理就给员工非常大的自由，将一切信息透明化，员工可以在不受监管和行为控制的情况下自行决策并完成任务。和员工通过讨论设置情景，不要告诉员工该怎么做，而是让他自己做决策。&lt;/p>
&lt;p>实现情景管理的三个必要条件：&lt;/p>
&lt;ul>
&lt;li>高密度人才&lt;/li>
&lt;li>创新性目标。也就是说不是所有行业都适合这种管理方式，比如说制造飞机这种「防范错误」型行业就不能使用情景管理&lt;/li>
&lt;li>公司的组织结构是松散耦合而不是紧密耦合，松散耦合是树形结构，而紧密耦合是金字塔结构&lt;/li>
&lt;/ul>
&lt;h3 id="全球化">全球化&lt;/h3>
&lt;p>本书的最后一章就聊了一下 Netflix 走向国际化的事情，因为文化的差异，刚开始推行的时候他们遇到了一些阻碍。比分说荷兰人是世界上非常直接的国家，而日本是非常委婉的，新加坡是东南亚最直接的国家，但与世界相比仍然算是委婉的。&lt;/p>
&lt;p>他们根据&lt;a href="https://erinmeyer.com/tools/">艾琳的国家地图工具&lt;/a>制作了 Netflix 的文化地图，然后会做相应的调整与适应。&lt;/p>
&lt;h2 id="最后总结">最后总结&lt;/h2>
&lt;p>总结本书内容，如下图，Netflix 主要分三步实现了他们现现在的企业文化：&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211023H0DxIA.jpg" alt="">&lt;/p>
&lt;p>「自由与责任」的核心理念就是充分给予自由，但是如果被滥用，必须受到严厉的惩罚。这种制度非常适合创意类型的公司，因为他们更多的是脑力劳动，而不是靠堆时间。&lt;/p>
&lt;p>国内适合这种企业文化吗？我想很难，小公司倒是可以尝试一下，但是像 Netflix 这么大的公司，能做到这点就很难了。这种企业文化对人的要求很高，我觉得身为 Netflix 员工必须对自己事业非常有兴趣以及非常喜欢这份事业才可以做到持续不断的保持是「优秀人才」（因为仅仅做到称职是不够的）。&lt;/p>
&lt;p>也正是这种文化造就了 Netflix 的快速成长，持续不断的打造众多优秀作品。如果你对 Netflix 企业文化感兴趣的话，建议你自己把书找来读读。&lt;/p></description></item><item><title>使用 Linear 来管理你的项目</title><link>https://blog.forecho.com/using-linear.html</link><pubDate>Wed, 20 Oct 2021 10:59:00 +0800</pubDate><guid>https://blog.forecho.com/using-linear.html</guid><description>&lt;p>&lt;a href="https://linear.app/">&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211020VXxM9t.png" alt="">&lt;/a>&lt;/p>
&lt;h2 id="引言">引言&lt;/h2>
&lt;p>互联网时代，大家做软件开发通常都是使用&lt;a href="https://zh.wikipedia.org/zh/Scrum">敏捷开发&lt;/a>的模式，那么告别小作坊式的软件开发应该从使用项目管理工具开始。&lt;/p>
&lt;p>从事 WEB 开发接近 9 年了，这些年来从刚开始的公司没有项目管理工具，到后来用过 &lt;a href="https://trello.com/">Trello&lt;/a>、&lt;a href="https://www.tapd.cn/">TAPD&lt;/a> 、&lt;a href="https://www.teambition.com/">Teambition&lt;/a> 、&lt;a href="https://github.com/cashwarden/web/projects">Github Projects&lt;/a> 、&lt;a href="https://www.atlassian.com/software/jira">Jira&lt;/a> 等不计其数的产品。&lt;/p>
&lt;p>今天我正式给大家推荐到目前为止我用过的最满意的项目管理工具 - &lt;a href="https://linear.app/">Linear&lt;/a>，下面我就挑几个本人喜欢的亮点谈谈：&lt;/p>
&lt;h2 id="多种视角">多种视角&lt;/h2>
&lt;p>可以从多种视角获取项目的进度：&lt;/p>
&lt;h3 id="清单模式">清单模式&lt;/h3>
&lt;p>可以让你专注于当下任务。&lt;/p>
&lt;h3 id="看板模式">看板模式&lt;/h3>
&lt;p>可以让你一览项目整体情况。&lt;/p>
&lt;h3 id="甘特图模式">甘特图模式&lt;/h3>
&lt;p>了解项目的整体进度，防止延期。&lt;/p>
&lt;h2 id="自动化">自动化&lt;/h2>
&lt;p>这里指的是配合 GitHub、GitLab 实现任务状态自动更新的功能，使用此功能要先配置 GitHub、GitLab，其他配置可以使用默认的也可以自定义。&lt;/p>
&lt;p>此功能是我最喜欢的功能了，而且这也是我使用 Linear 最大的原因。这是一种工作流程，大概流程就是：&lt;/p>
&lt;ul>
&lt;li>先在项目管理里面创建一个 Issue，也就是任务&lt;/li>
&lt;li>然后代码里面，新建一个分支开发任务，关键在于这个分支的命名，必须要按照约定的规则命名。&lt;/li>
&lt;li>开发完成之后提交 PR (Pull request) 然后状态就会自动更新为「In Progress」&lt;/li>
&lt;li>PR 被合并之后，任务的状态就自动更新为「Done」&lt;/li>
&lt;li>最重要的是 PR 页面会自动贴上 Linear 任务单连接，Linear 任务单这边也会自动补上 PR 单，非常方便回顾和查看&lt;/li>
&lt;/ul>
&lt;p>详情介绍可以去看官网文档 - &lt;a href="https://linearapp.notion.site/GitHub-and-GitLab-fa4b88df484343e4989538f066c729f3">《GitHub and GitLab》&lt;/a>&lt;/p>
&lt;p>PS：上家公司用的是 Jira 管理项目，当时就体验过，用过这个功能之后就觉得「真是太棒了」，但是 Jira 没有提供免费版本，而 Linear 可以免费使用。&lt;/p>
&lt;h2 id="开放生态">开放生态&lt;/h2>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211020XuH2yo.png" alt="">&lt;/p>
&lt;p>国内的话生态太差了，很多软件都不会打通，Linear 目前支持以上几个平台。&lt;/p>
&lt;p>举个例子 Linear 连接 &lt;a href="https://slack.com/intl/zh-cn/">Slack&lt;/a> 之后，如果有任务更新状态会自动给 Slack 发消息，方便跟团队其他人同步消息。&lt;/p>
&lt;p>像上面说的自动化功能也是得益于生态的开放，反正我没看到有一家国内项目管理有此功能的。&lt;/p>
&lt;h2 id="对小团队更友好">对小团队更友好&lt;/h2>
&lt;p>Jira 功能强大，也很复杂，没有免费版，不太适合小团队。而 Linear 对小团队非常友好，免费用户功能很良心。具体区别你可以看看这个页面 - &lt;a href="https://linear.app/pricing">Pricing&lt;/a>&lt;/p>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>知道这个工具还是得益于推友 &lt;a href="https://twitter.com/liuyi0922">@61&lt;/a> 的推文，然后去体验了一把，确实很给力，而且还可以免费使用我一直在寻找的自动化功能，真的非常感谢。&lt;/p>
&lt;p>另外想补充的有：&lt;/p>
&lt;ul>
&lt;li>GitHub Projects 其实也有自动化功能，但是操作有点慢（网络问题？），其他功能（比方说统计，甘特图）也没有。&lt;/li>
&lt;li>还有一款类似的项目管理工具 - &lt;a href="https://height.app/">Height&lt;/a> ，大体功能差距不大，但是设计理念有点区别，有兴趣也可以去体验一下。&lt;/li>
&lt;/ul></description></item><item><title>GitHub 组织项目免费使用 Vercel</title><link>https://blog.forecho.com/free-use-of-vercel-for-github-organizational.html</link><pubDate>Mon, 18 Oct 2021 18:09:00 +0800</pubDate><guid>https://blog.forecho.com/free-use-of-vercel-for-github-organizational.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>&lt;a href="https://vercel.com/">Vercel&lt;/a> 是一个静态网站托管项目，而且有很多东西自动化完成，反正就是非常的方便和省事，我的&lt;a href="https://stock.forecho.com/">港美股平台推荐&lt;/a>网页就是使用 Vercel 托管的，访问速度很快吧。&lt;/p>
&lt;p>Vercel 托管 GitHub 个人项目是免费的，不管私有还是开源，这还是比较良心的，但是组织项目是收费的，需要在 Vercel 创建 Team 才能使用，但是吧价格太贵了，对于目前没有收入的我来说有点承受不起，于是就找到了一种方式可以免费托管 GitHub 组织项目代码的方式。&lt;/p>
&lt;h2 id="操作步骤">操作步骤&lt;/h2>
&lt;h3 id="本地环境搭建">本地环境搭建&lt;/h3>
&lt;p>本地先有 &lt;a href="https://nodejs.org/">Nodejs&lt;/a> 环境，然后执行下面代码安装 Vercel&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-fallback" data-lang="fallback">npm i -g vercel
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="搭建项目">搭建项目&lt;/h3>
&lt;p>然后就开始本地搭建项目了，不管你是博客还是文档都可以，支持的 &lt;a href="https://vercel.com/new/templates">template&lt;/a> 有很多。&lt;/p>
&lt;p>比方说我想搭建一个文档，我就找到了官方的&lt;a href="https://github.com/shuding/nextra">文档示例项目代码&lt;/a>，下载了一份直接就可以用了。&lt;/p>
&lt;h3 id="创建-velcel-项目">创建 Velcel 项目&lt;/h3>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211018e1a6SM.png" alt="">&lt;/p>
&lt;p>在网页上我们只能通过导入 GitHub 项目的方式创建 Velcel 项目，免费版不能在线使用 GitHub 组织的代码，所以我们要使用命令行创建。&lt;/p>
&lt;p>在上一步准备好的项目根目录执行 &lt;code>vercel&lt;/code> 命令，然后按照提示一路操作就可以了，选项我都是选默认的，这个要按照项目情况选。&lt;/p>
&lt;p>然后使用 &lt;code>cat&lt;/code> 命令获取 &lt;code>orgId&lt;/code> 和 &lt;code>projectId&lt;/code> 的值&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-fallback" data-lang="fallback">cat .vercel/project.json
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="添加-github-actions">添加 GitHub Actions&lt;/h3>
&lt;p>在当前项目添加 Github Action 部署文件 &lt;code>.github/workflows/deploy.yml&lt;/code>，实现自动化部署，代码如下：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-fallback" data-lang="fallback">name: deploy website preview
on:
push:
branches:
- main
jobs:
deploy:
runs-on: ubuntu-latest
steps:
- uses: actions/checkout@v2
- uses: amondnet/vercel-action@v20
with:
github-token: ${{ secrets.GITHUB_TOKEN }}
vercel-token: ${{ secrets.VERCEL_TOKEN }}
vercel-args: &amp;#39;--prod&amp;#39; #Optional
vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_STATIC }}
- name: preview-url
run: |
echo ${{ steps.vercel-action.outputs.preview-url }}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>根据你的需求需要适当的修改。&lt;/p>
&lt;h3 id="添加-github-actions-secrets">添加 GitHub Actions secrets&lt;/h3>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20211018Xyc06u.png" alt="">&lt;/p>
&lt;p>给 GitHub Actions 添加环境变量，在 GitHub 项目的设置里面找到相应的位置创建，我们只需要创建三个值：&lt;/p>
&lt;ul>
&lt;li>&lt;code>VERCEL_ORG_ID&lt;/code>：前面获取到的 &lt;code>orgId&lt;/code>&lt;/li>
&lt;li>&lt;code>VERCEL_PROJECT_ID_STATIC&lt;/code>：前面获取到的 &lt;code>projectId&lt;/code>&lt;/li>
&lt;li>&lt;code>VERCEL_TOKEN&lt;/code>：在 Velcel 手动&lt;a href="https://vercel.com/account/tokens">创建 token&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>然后每次 &lt;code>push&lt;/code> 代码， Velcel 就会自动部署了。&lt;/p>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>这几步虽然操作起来不算麻烦，但是也费时间，有能力的朋友尽量还是购买 &lt;a href="https://vercel.com/pricing">Vercel Pro&lt;/a> 吧。&lt;/p>
&lt;p>最后感谢 &lt;a href="https://vercel.com/">Vercel&lt;/a> 和 &lt;a href="https://github.com/amondnet/vercel-action">amondnet/vercel-action&lt;/a> 提供的服务。&lt;/p></description></item><item><title>讨薪维权之路</title><link>https://blog.forecho.com/the-road-to-asking-for-pay-and-defending-rights.html</link><pubDate>Thu, 09 Sep 2021 09:50:00 +0800</pubDate><guid>https://blog.forecho.com/the-road-to-asking-for-pay-and-defending-rights.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>持续更新中&amp;hellip;&lt;/p>
&lt;p>这是我目前正在经历的事情，打算写这篇文章记录下来，留作记录，也可以给其他人分享一些经验。&lt;/p>
&lt;p>这不是我第一次维权了，上一次也是被欠薪，小公司，老板一直拖欠工资，欠了差不多 4 个多月最后才偿还工资，我们都没要求赔偿。当初有了解过去劳动仲裁，但是最后还没去。详情可以看 &lt;a href="https://blog.forecho.com/the-first-venture-came-to-an-end.html">《第一次创业告一段落》&lt;/a>。&lt;/p>
&lt;p>废话不多说，下面我门进入这次的主题。&lt;/p>
&lt;h2 id="欠薪">欠薪&lt;/h2>
&lt;p>8月 1 号本是要发 7 月工资的时候，在这前一天，我们收到公司口头通知，7 月份的工资将在 8 月下旬发，我们理解公司困难，也没多说什么，推迟一次发工资还能熬过去。&lt;/p>
&lt;p>但是随着 8 月一点一点的过去，中途问过 HR，那边说也不知道什么时候发。30 号那天我们等了一天没收到通知，9 月 1 号我们也等了半天工资通知，结果下午等来了「破产」通知。&lt;/p>
&lt;h2 id="宣布破产">宣布破产&lt;/h2>
&lt;p>9月 1 号下午，从集团来了个 HR 来给我们宣布，他们准备要让公司走&lt;strong>简易破产&lt;/strong>流程了，上午我们还在写代码，此刻我们一脸懵逼，说是现在是提前一个月通知，有 N 倍赔偿。&lt;/p>
&lt;p>这相当于裁员，我们也不用工作了，有赔偿，大家都还算开心。当天还沉浸在「喜悦」当中。但是当晚回头想想，我们可能被公司耍了。有以下几点疑问：&lt;/p>
&lt;ul>
&lt;li>公司说是有赔偿，但是已经 2 个月工资都没发了。工资都没钱发，赔偿什么时候能给到我们就更难说了。那天他们只说了赔偿方案，没给时间点，而且都是口头承诺，没有任何公司层面的书面通知。&lt;/li>
&lt;li>公司如果都破产了，这个流程不到一个月就能走完，到时候公司注销了，我们工资和赔偿如果都没拿到，找谁？&lt;/li>
&lt;/ul>
&lt;p>主要是这两个问题，我们第二天又找到集团 HR，要求他们帮我们解惑。&lt;/p>
&lt;h2 id="劳动仲裁">劳动仲裁&lt;/h2>
&lt;p>第二天我们去了街道办，说明我们的情况，他们让我们立刻去劳动局走劳动仲裁，要赶紧立案，阻止公司走简易破产，不然到时候想拿到工资就难了。由于公司注册资本比较大（1 亿多），只能去市劳动仲裁。当天下午我们成功立案了，这里可以分享几个点：&lt;/p>
&lt;ul>
&lt;li>集体仲裁，立案非常快，能走集体的不要走个人，集体立案有人数要求，我们的要求是至少 50 人。&lt;/li>
&lt;li>当天要带身份证原件 + 劳动合同复印件，身份证复印两份&lt;/li>
&lt;/ul>
&lt;p>当天要求本人带身份证原件，签字，然后确认合同等，之后选几个代表跟进就可以了。劳动仲裁那边会安排免费的律师。&lt;/p>
&lt;h2 id="方案">方案&lt;/h2>
&lt;p>2号下午我们要求他们赶紧给方案到我们，我们要具体方案，包括执行时间。然后我们当天说是给不了，他们要核算财务，下周三（也就是 8 号）能才给。&lt;/p>
&lt;p>在那天到来之前我们也没闲着，大家开会讨论明确统一诉求以及底线，如果公司的方案我们不满意，不能接受的话，我们下一步该如何行动等。&lt;/p>
&lt;p>没想到周三那天给的方案居然是，12 月份才开始给我们发工资，而且是按月分期支付。也就是说我们年底才能见到钱，半年才给钱，我们所有人都不能接受这个方案，两个月没发工资，其实都很难了。如果有房贷、车贷啥的，而且深圳消费也不低。12 月才给我们钱，那不得饿死我们？&lt;/p>
&lt;h2 id="诉求">诉求&lt;/h2>
&lt;p>方案没法谈了，我们当天要求去见法人当面谈。法人有上百家公司，其中我们的股东就是深圳豪宅开发商，我们知道法人就在那边，去那边要求见法人。&lt;/p>
&lt;p>法人接待了我们，会议室我们大概说了一下我们的诉求，法人甩锅，然后诉苦，还说不会注销公司，下面人理解错意思了。不过这些也没用，我们不吃她那一套，他再怎么穷，能有我们穷？当天争取了一下午，他们最后答应这两个星期发 7 月份工资，但是不敢承诺 8 月份工资什么时候发。说是 7 月份工资还是她去招人借钱发，我组略计算了一下我们两个月工资 500 万差不多了，我不信她搞不到这个钱。&lt;/p>
&lt;p>没发谈我们就只能继续争取我们的诉求了，我们诉求就是 7、8 月工资这个月底前发，赔偿年底前发。然后我们准备去拉横幅了，他们安排了几个物业保安跟随我们。&lt;/p>
&lt;p>我们拉了几分钟横幅，最后警察也来了，警察给我们双方调解。最后有争取到 9 号 10 点去去&lt;strong>街道和谐劳动关系促进中心&lt;/strong>继续谈。&lt;/p>
&lt;p>会哭的孩子有奶吃，必须要有点行动，给公司一点压力，他们才愿意处理。&lt;/p>
&lt;h2 id="达成和解">达成和解&lt;/h2>
&lt;p>在街道办的调解下，我们进一步争取到了最新的方案：&lt;/p>
&lt;ul>
&lt;li>下周（9 月 17 号前）发 7 月份的工资&lt;/li>
&lt;li>10 月底发 8 月份的工资&lt;/li>
&lt;li>2022 年 1 月底发 9 月份的工资，9 月份半个月不用上班，照常发工资，年假、调休也不不算了（清零）&lt;/li>
&lt;li>赔偿是 N，分两个月发，2022 年 2 月底 30%，3 月底发 70%&lt;/li>
&lt;/ul>
&lt;p>这个方案我们还基本能接受，大家互相让一步。公司要求我们去劳动仲裁撤诉，然后跟他们签协议，协议就是赔偿方案，有公司盖章，也是有法律效应的，但是撤诉之后半年之内不能再上诉了。&lt;/p>
&lt;p>大部分人都同意了这份协议，如果还是不同意的，还是可以走劳动仲裁的流程的。&lt;/p>
&lt;h2 id="发钱记录">发钱记录&lt;/h2>
&lt;ul>
&lt;li>9 月 16 号收到 7 月份工资&lt;/li>
&lt;/ul>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>讨薪天经地义，到哪都能说里，遇到这种事情，先保留证据，先调节，如果无果久尽早去劳动仲裁。我们遇到的情况有：&lt;/p>
&lt;ul>
&lt;li>拖欠工资超过 30 天，公司违反劳动法&lt;/li>
&lt;li>公司涉嫌恶意注销公司&lt;/li>
&lt;li>公司目前也拖欠了房东 9 月份房租，我们随时可能被房东赶出，无办公地点，到时候我们就可以走被迫离职流程&lt;/li>
&lt;/ul>
&lt;p>最后双方各退一步，达成调解。我们相信公司还是愿意去解决问题的，只是目前遇到资金周转问题。&lt;/p></description></item><item><title>31 岁生日，还没有而立</title><link>https://blog.forecho.com/31th-birthday.html</link><pubDate>Mon, 06 Sep 2021 11:08:00 +0800</pubDate><guid>https://blog.forecho.com/31th-birthday.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>前两天过了 31 岁生日，这次过生日还是在周六，难得生日正好在周末。这篇文章就随便写点最近的感悟吧。&lt;/p>
&lt;h2 id="回顾这几年职业生涯">回顾这几年职业生涯&lt;/h2>
&lt;p>最近这两年因为疫情原因，公司业务受到了一些影响，虽然我没有被裁员，有幸被留下来了。但是这两年也基本上属于躺平状态，公司需求不多，我们不用加班，这是我在没有涨工资的情况下还没走的主要原因。&lt;/p>
&lt;p>我们的工作性质有点儿像是给香港做外包，香港人办事「效率低」，节奏慢，挺好的。而且他们的工作流程与国际接轨，个人觉得很舒畅。&lt;/p>
&lt;p>最近这一年我来一直犹豫要不要换工作，是继续躺平还是「升级」呢？在犹豫当中我好不容易选择了躺平，我选择不加班，多花点时间陪陪家人，自己业余时间做点项目挺好。但是这样的话我的技术就不会得到很大的提升，因为公司业务发展处于平稳状态。&lt;/p>
&lt;p>就在我生日的前几天公司意外宣布要走破产程序了，两个月没发工资了，我没想到这次我又遇到了这种情况，4 年前我遇到项目被砍，项目组被裁员的情况 - &lt;a href="https://blog.forecho.com/goodbye-zhidian.html">《再见了知店》&lt;/a>，但是那次我还年轻，我拿着赔偿还很开心的走了。&lt;/p>
&lt;p>然后还去一个小的创业公司当上了技术负责人，没撑过半年公司就倒闭，我还被欠薪了 4 个月，幸运的是拖欠了几个月之后，老板履行承诺发了工资 - &lt;a href="https://blog.forecho.com/a-half-year-review-of-entrepreneurship.html">《创业半年回顾》&lt;/a> 和 &lt;a href="https://blog.forecho.com/the-first-venture-came-to-an-end.html">《第一次创业告一段落》&lt;/a>&lt;/p>
&lt;p>后来还和熟人以技术总监的身份去创业，只拿了底薪，最近 5 个月的高强度工作，最后产品都没推广出去，还好我及时推出止损了 - &lt;a href="https://blog.forecho.com/the-life-of-entrepreneurship-has-come-to-an-end-again.html">《创业的生活再次告一段落》&lt;/a>&lt;/p>
&lt;p>后来想着找一个大点的公司，安稳的工作，我入职的时候公司有百号人，公司也属于大集团（香港上市）的子公司，心想还是比较靠谱的。&lt;/p>
&lt;p>不瞒大家，我在现在的公司都工作接近 3 年了，这是我工作以来，待过最长的公司了，我都续签了劳动合同，一直等着盖章的合同，结果等来了公司破产，行业也是越来越不景气了。&lt;/p>
&lt;h2 id="大龄程序员">大龄程序员&lt;/h2>
&lt;p>前几天过了 31 岁生日，12 年毕业的我已经写了 9 年程序了。圈内传言干我们这行的 35 岁就面临失业的困境了，给我的时间真的不多了。而我还没有遇到处理大并发的真是场景呢？我该如何找工作？&lt;/p>
&lt;p>这几年来我主要处于 SaaS 的领域，用的最多也是 PHP，这注定我基本上无法接触到大并发业务场景。但是为了应付面试，我最近不得不去找大量的资料学习并「背诵」，其实我上学哪会儿最讨厌得就是背东西，想起来就是噩梦。而且这资料越看越觉得自己无知，越看越焦虑。💔&lt;/p>
&lt;p>日常的工作有 Google 就够了，最近几年也没怎么写技术文章了，因为感觉没必要写，网上一搜都能找到。除非是遇到网上无法找到解决方案，花了我很久才解决的问题，才值得被记录。&lt;/p>
&lt;h2 id="炒股">炒股&lt;/h2>
&lt;p>最近写的最多的文章就是炒股类型的了，我是 17 年开始炒美股的 - &lt;a href="https://blog.forecho.com/how-do-i-invest-in-american-stocks.html">《我是怎么投资美股的》&lt;/a>，为什么不研究技术转而研究炒股了？我觉得靠技术涨工资赚钱以后会越来越难了，再说我们不能在一棵树上吊死，我刚毕业那会儿做程序员的少，现在不一样了，做程序员的太多了，我这大专的学历与别人竞争太难了。&lt;/p>
&lt;p>有的公司说是不看学历，但是如果你学历低也会给面试机会的，但是要求会很高的，你必须要有出彩的地方。&lt;/p>
&lt;p>有时候想想写程序的真累，要不断的去学习新知识，靠项目经验找工作很难。保持精力充沛很人容易，难的是这种状态要一直保持下去。所以我业余时间炒美股了。&lt;/p>
&lt;h2 id="副业">副业&lt;/h2>
&lt;p>去年不忙的时候我写了 &lt;a href="https://blog.forecho.com/tags/cashwarden.html">《CashWarden》&lt;/a>，刚开始也是动力十足，但是后来用的人不太多，开发完满足我自己的功能后就告一段落了。&lt;/p>
&lt;p>直到前几天有人联系我，愿意花 1 万块钱买我的 Pro 版代码，倒是给了我很多信心，让我看到了一点商业化的希望。这几年来我一直有想开公司，自己做项目的念头，但是又怕养不活自己而迟迟没付出行动。&lt;/p>
&lt;h2 id="中奖">中奖&lt;/h2>
&lt;p>这次生日唯一值得庆幸的是，前几天看了视频教程，Up 主搞抽奖活动，我点了几下手机，没想到生日那天开奖我居然中了 100 块钱，这几年来所处的公司都没年会，以前年会必中奖的我都没机会中奖了。&lt;/p>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>看着身边朋友都有房有孩子的，我有时候就很焦虑。去年在考虑买房的事情，结果遇到了深圳调控房价，新房打新不到，二手房首付被提高了，更是不想买了，但是有时候这事着急也没用。&lt;/p>
&lt;p>我还是得刷题，面试，去找工作。最近感觉精神状态没有以前那么好了，也不知道是不是年纪大的原因。&lt;/p></description></item><item><title>期权组合之 Vertical Spread</title><link>https://blog.forecho.com/financedeep-33.html</link><pubDate>Sun, 29 Aug 2021 14:59:00 +0800</pubDate><guid>https://blog.forecho.com/financedeep-33.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>这篇主要是讲解期权组合的第一篇文章，不了解期权的朋友可以先看我&lt;a href="https://blog.forecho.com/tags/%E6%9C%9F%E6%9D%83.html">之前的期权系列文章&lt;/a>。&lt;/p>
&lt;p>目前我所使用的证券平台只有雪盈和微牛支持组合期权，本篇文章主要是使用雪盈来做实例，没开户的朋友如果想体验组合期权推荐使用雪盈：&lt;/p>
&lt;ul>
&lt;li>开户地址：&lt;a href="http://link.3li3.com/xueying">http://link.3li3.com/xueying&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/snowballsecurities.png!s" alt="雪盈证券开户">&lt;/p>
&lt;h2 id="vertical-spread">Vertical Spread&lt;/h2>
&lt;h3 id="什么是-vertical-spread">什么是 Vertical Spread？&lt;/h3>
&lt;p>根据 &lt;a href="https://www.investopedia.com/terms/v/verticalspread.asp">What Is a Vertical Spread?&lt;/a> 描述，简单翻译就是：&lt;/p>
&lt;p>即垂直价差，指同时买入和卖出相同类型（看跌或看涨）同一到期日但行权价格不同的期权。术语「垂直 」来自于执行价格的位置。&lt;/p>
&lt;h3 id="特点">特点&lt;/h3>
&lt;p>垂直价差最大的好处有两个：&lt;/p>
&lt;ul>
&lt;li>减小风险&lt;/li>
&lt;li>扩大盈利&lt;/li>
&lt;/ul>
&lt;p>坏处：&lt;/p>
&lt;ul>
&lt;li>盈利有限，锁定了最大盈利，遇到暴涨与你无关&lt;/li>
&lt;/ul>
&lt;p>垂直价差分为以下四种：&lt;/p>
&lt;ul>
&lt;li>牛市看涨价差（Bull Call Spread）&lt;/li>
&lt;li>牛市看跌价差（Bull Put Spread）&lt;/li>
&lt;li>熊市看涨价差（Bear Call Spread）&lt;/li>
&lt;li>熊市看跌价差（Bear Put Spread）&lt;/li>
&lt;/ul>
&lt;h3 id="牛市看涨价差bull-call-spread">牛市看涨价差（Bull Call Spread）&lt;/h3>
&lt;p>虽然理论上买 Call 是盈利无限的，但是实际上我们都知道不可能是无限利润的，暴涨的概率是非常非常小的。这个时候我们可以使用期权组合的垂直价差策略来减小风险。&lt;/p>
&lt;ul>
&lt;li>特点：买较低执行价 (A) 的看涨期权，同时出售另一个到期日相同但执行价（B）较高的看涨期权（在同一标的资产上）。&lt;/li>
&lt;li>表示：我看涨某个股票，但是到期日不会涨到 B 价格。&lt;/li>
&lt;/ul>
&lt;p>下面我们来用实例讲解一下，先看一张图，这是三张比较典型的组合期权：&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/202108295AEzBS.jpeg" alt="">&lt;/p>
&lt;ul>
&lt;li>图一：观察了几天 AMD 后，我发现它开始进入上涨趋势了，想买 AMD 的 Call，但是又怕期权归零，这个时候我使用了垂直价差策略，下单了一个组合期权，预测 AMD 会涨到 110 但是不会涨到 115。&lt;/li>
&lt;li>图二：NVDA 和 AMD 也同属于半导体板块，所以我也下单了一张 NVDA 的组合期权，两张期权组合最大的区别是&lt;code>最大亏损&lt;/code>和&lt;code>最大盈利&lt;/code>比不同，NVDA 明显要稍微保守一点，即更容易达到最大盈利。&lt;/li>
&lt;li>图三：TSLA 连续跌了几天了，想抄底，于是我也买了一个组合期权，而这个组合&lt;code>最大亏损&lt;/code>和&lt;code>最大盈利&lt;/code>是一样的。&lt;/li>
&lt;/ul>
&lt;p>我们再来说说结果：&lt;/p>
&lt;ul>
&lt;li>AMD 后来跌了，108 的价格都没达到，我买的一张 Call 没有到行权价归零了，但是卖的 Call 也没有被行权，给了一定补偿，所以最后只亏损 250。&lt;/li>
&lt;li>NVDA 最后一天波动比较大，我提前止盈了。&lt;/li>
&lt;li>TSLA 最后一天收盘价到达了&lt;code>盈亏平衡点&lt;/code>（ 712 的价格），我顺利拿到了 2500。&lt;/li>
&lt;/ul>
&lt;p>从上图我们可以得出一个结论，&lt;code>最大盈利&lt;/code>如果大于&lt;code>最大亏损&lt;/code>意味着比较小概率到达&lt;code>最大盈利&lt;/code>。&lt;/p>
&lt;p>另外虽然我没有钱为 TSLA 行权，但是如果最后是实值期权，雪盈会自动帮你平仓，这点倒是不用担心。&lt;/p>
&lt;h3 id="牛市看跌价差bull-put-spread">牛市看跌价差（Bull Put Spread）&lt;/h3>
&lt;ul>
&lt;li>特点：购买执行价（A）高的看跌期权，同时出售另一个到期日相同但执行价（B）格较低的看跌期权（在同一标的资产上）。&lt;/li>
&lt;li>表示：我预测某个股票不会跌过 A 价格，一旦跌过了我愿意以 A 价格买入，而且我不担心它跌过 B 价格（我拥有 B 价格的卖出权）&lt;/li>
&lt;/ul>
&lt;h3 id="熊市看涨价差bear-call-spread">熊市看涨价差（Bear Call Spread）&lt;/h3>
&lt;ul>
&lt;li>特点：出售执行价（A）低的看涨期权，同时购买较高执行价（B）的到期日相同的另一看涨期权（在同一标的资产上）。&lt;/li>
&lt;li>表示：我预测股票会跌，愿意用 A 价格卖出股票，如果如果我预测错了，股票大涨了，涨过了 B 价格，那我也不会错过赚钱的机会。&lt;/li>
&lt;/ul>
&lt;h3 id="熊市看跌价差bear-put-spread">熊市看跌价差（Bear Put Spread）&lt;/h3>
&lt;ul>
&lt;li>特点：购买执行价（A）高的看跌期权，同时出售另一个到期日相同但执行价（B）较低的看跌期权。&lt;/li>
&lt;li>表示：我预测股票会跌，但跌幅有限，不会跌过 B 价格。 我有 A 价格卖出此股票的权利。&lt;/li>
&lt;/ul>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;h3 id="不要玩交易不活跃的期权">不要玩交易不活跃的期权&lt;/h3>
&lt;p>之前我们就讲过交易期权之前一定要看看这个期权的交易量，如果不活跃的期权，会存在期权差价，玩这种期权就比较吃亏。&lt;/p>
&lt;h3 id="不建议单个平仓期权">不建议单个平仓期权&lt;/h3>
&lt;p>雪盈组合期权成交之后，你的持仓会有两张期权，那么如何平仓期权呢？找到交易记录，如何之前是买入的组合期权，这个时候设置价格卖出组合期权就可以了。不推荐两张期权单个去平仓，会有风险，有可能会让本来盈利的变成亏损。&lt;/p>
&lt;h3 id="使用支持组合期权的交易平台">使用支持组合期权的交易平台&lt;/h3>
&lt;p>富途证券目前不支持组合期权，虽然也可以玩，但是不交易玩，因为：&lt;/p>
&lt;ul>
&lt;li>如果两个期权不同时成交，就失去了组合期权的优势了&lt;/li>
&lt;li>如果不支持组合期权，需要保证金，这保证金也不少了，玩不起来。&lt;/li>
&lt;/ul>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210829FHRJGv.jpg" alt="垂直价差 Vertical Spread 策略对比">&lt;/p>
&lt;p>期权的可玩性有很多，自从学了组合期权我都不想玩单个期权了。垂直价差 (Vertical Spread) 是最常用的策略之一，因为风险可控，回报也可以预期。这种方式要风险小的很多，万一方向错误不至于亏很多。&lt;/p>
&lt;h2 id="资料">资料&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.usoptions.net/post/strategy4">《策略之四，Vertical Spread 垂直价差》&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>我是如何用 Golang 做接口测试的</title><link>https://blog.forecho.com/using-golang-for-api-testing.html</link><pubDate>Mon, 16 Aug 2021 10:59:00 +0800</pubDate><guid>https://blog.forecho.com/using-golang-for-api-testing.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>最近公司项目用 Golang 重写，总算是有机会实战了。这篇文章主要分享与记录我是怎么在 Golang 的项目中写接口测试的。&lt;/p>
&lt;p>因为是换语言重写 API 项目，所以一定要保证新旧项目对外输出的结果一致性。由于我使用 Golang 的时间不算太久，本篇文章如有错误、不足之处，还请大家多多指教。&lt;/p>
&lt;h2 id="接口测试">接口测试&lt;/h2>
&lt;p>接口测试的代码有参考 &lt;a href="https://github.com/qiangxue/go-rest-api/blob/master/internal/auth/api_test.go#L21">qiangxue/go-rest-api&lt;/a> 的代码，但是因为使用的包和结构也不太一样，所以会有调整，但是思路是差不多的。&lt;/p>
&lt;h3 id="tests-包">tests 包&lt;/h3>
&lt;p>先建一个 tests 包，写一个 &lt;code>Endpoint&lt;/code> 方法：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-go" data-lang="go">&lt;span style="color:#ff79c6">package&lt;/span> tests
&lt;span style="color:#ff79c6">import&lt;/span> (
&lt;span style="color:#f1fa8c">&amp;#34;bytes&amp;#34;&lt;/span>
&lt;span style="color:#f1fa8c">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span style="color:#f1fa8c">&amp;#34;github.com/julienschmidt/httprouter&amp;#34;&lt;/span>
&lt;span style="color:#f1fa8c">&amp;#34;github.com/kinbiko/jsonassert&amp;#34;&lt;/span>
&lt;span style="color:#f1fa8c">&amp;#34;github.com/stretchr/testify/assert&amp;#34;&lt;/span>
&lt;span style="color:#f1fa8c">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;span style="color:#f1fa8c">&amp;#34;net/http/httptest&amp;#34;&lt;/span>
&lt;span style="color:#f1fa8c">&amp;#34;testing&amp;#34;&lt;/span>
)
&lt;span style="color:#6272a4">// APITestCase represents the data needed to describe an API test case.
&lt;/span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">type&lt;/span> APITestCase &lt;span style="color:#8be9fd;font-style:italic">struct&lt;/span> {
Name &lt;span style="color:#8be9fd">string&lt;/span>
Method &lt;span style="color:#8be9fd">string&lt;/span>
URL &lt;span style="color:#8be9fd">string&lt;/span>
Body &lt;span style="color:#8be9fd">string&lt;/span>
Header http.Header
WantStatus &lt;span style="color:#8be9fd">int&lt;/span>
WantResponse &lt;span style="color:#8be9fd">string&lt;/span>
}
&lt;span style="color:#6272a4">// Endpoint tests an HTTP endpoint using the given APITestCase spec.
&lt;/span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">func&lt;/span> &lt;span style="color:#50fa7b">Endpoint&lt;/span>(t &lt;span style="color:#ff79c6">*&lt;/span>testing.T, router &lt;span style="color:#ff79c6">*&lt;/span>httprouter.Router, tc APITestCase) {
t.&lt;span style="color:#50fa7b">Run&lt;/span>(tc.Name, &lt;span style="color:#8be9fd;font-style:italic">func&lt;/span>(t &lt;span style="color:#ff79c6">*&lt;/span>testing.T) {
req, _ &lt;span style="color:#ff79c6">:=&lt;/span> http.&lt;span style="color:#50fa7b">NewRequest&lt;/span>(tc.Method, tc.URL, bytes.&lt;span style="color:#50fa7b">NewBufferString&lt;/span>(tc.Body))
&lt;span style="color:#ff79c6">if&lt;/span> tc.Header &lt;span style="color:#ff79c6">!=&lt;/span> &lt;span style="color:#ff79c6">nil&lt;/span> {
req.Header = tc.Header
}
&lt;span style="color:#ff79c6">if&lt;/span> req.Header.&lt;span style="color:#50fa7b">Get&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;Content-Type&amp;#34;&lt;/span>) &lt;span style="color:#ff79c6">==&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span> {
req.Header.&lt;span style="color:#50fa7b">Set&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;Content-Type&amp;#34;&lt;/span>, &lt;span style="color:#f1fa8c">&amp;#34;application/json&amp;#34;&lt;/span>)
}
res &lt;span style="color:#ff79c6">:=&lt;/span> httptest.&lt;span style="color:#50fa7b">NewRecorder&lt;/span>()
router.&lt;span style="color:#50fa7b">ServeHTTP&lt;/span>(res, req)
assert.&lt;span style="color:#50fa7b">Equal&lt;/span>(t, tc.WantStatus, res.Code, &lt;span style="color:#f1fa8c">&amp;#34;status mismatch&amp;#34;&lt;/span>)
&lt;span style="color:#ff79c6">if&lt;/span> tc.WantResponse &lt;span style="color:#ff79c6">!=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span> {
ja &lt;span style="color:#ff79c6">:=&lt;/span> jsonassert.&lt;span style="color:#50fa7b">New&lt;/span>(t)
ja.&lt;span style="color:#50fa7b">Assertf&lt;/span>(res.Body.&lt;span style="color:#50fa7b">String&lt;/span>(), tc.WantResponse)
}
})
}
&lt;span style="color:#8be9fd;font-style:italic">func&lt;/span> &lt;span style="color:#50fa7b">MockAuthHeader&lt;/span>(JWT &lt;span style="color:#8be9fd">string&lt;/span>) http.Header {
header &lt;span style="color:#ff79c6">:=&lt;/span> http.Header{}
header.&lt;span style="color:#50fa7b">Set&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;Authorization&amp;#34;&lt;/span>, fmt.&lt;span style="color:#50fa7b">Sprintf&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;Bearer %v&amp;#34;&lt;/span>, JWT))
&lt;span style="color:#ff79c6">return&lt;/span> header
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>几点需要说明：&lt;/p>
&lt;ul>
&lt;li>我们路由用的是 &lt;code>julienschmidt/httprouter&lt;/code> 此处你可以更改适用你们的&lt;/li>
&lt;li>&lt;code>stretchr/testify&lt;/code> 包是 Go 用的最多的断言包，非常好用，出现断言失败，输出结果清晰明了，推荐。&lt;/li>
&lt;li>&lt;code>kinbiko/jsonassert&lt;/code> 这个包可以断言两个 &lt;code>JSON&lt;/code> 的值是否相等，使用这个包是因为 &lt;code>stretchr/testify&lt;/code> 不满足我们的需求，我们每个接口都会返回 &lt;code>request_id&lt;/code> 这个值是唯一且随机的，所以我们断言的时候不必考虑这个值，使用的 &lt;code>kinbiko/jsonassert&lt;/code> 的 &lt;code>&amp;lt;&amp;lt;PRESENCE&amp;gt;&amp;gt;&lt;/code> 就能很好的满足我们的需求。另外由于 WantResponse 值我是直接拿的老项目返回的值做比对的， &lt;code>kinbiko/jsonassert&lt;/code> 断言 &lt;code>JSON&lt;/code> 时不会考虑顺序，这个也正是我们需要的功能。&lt;/li>
&lt;/ul>
&lt;h3 id="接口测试-1">接口测试&lt;/h3>
&lt;p>一个示例：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8be9fd;font-style:italic">func&lt;/span> &lt;span style="color:#50fa7b">mockNewServer&lt;/span>() &lt;span style="color:#ff79c6">*&lt;/span>Server {
&lt;span style="color:#ff79c6">return&lt;/span> &lt;span style="color:#50fa7b">NewServer&lt;/span>()
}
&lt;span style="color:#8be9fd;font-style:italic">func&lt;/span> &lt;span style="color:#50fa7b">TestAccount&lt;/span>(t &lt;span style="color:#ff79c6">*&lt;/span>testing.T) {
c &lt;span style="color:#ff79c6">:=&lt;/span> &lt;span style="color:#50fa7b">mockNewServer&lt;/span>()
JWT, _ &lt;span style="color:#ff79c6">:=&lt;/span> jwt.&lt;span style="color:#50fa7b">MakeJWT&lt;/span>(tests.ClientId, tests.ClientSecret)
header &lt;span style="color:#ff79c6">:=&lt;/span> tests.&lt;span style="color:#50fa7b">MockAuthHeader&lt;/span>(JWT)
items &lt;span style="color:#ff79c6">:=&lt;/span> []tests.APITestCase{
{
&lt;span style="color:#f1fa8c">&amp;#34;test_unauthorized&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#34;GET&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#34;/api/v1/account/1155501&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span>,
&lt;span style="color:#ff79c6">nil&lt;/span>,
http.StatusUnauthorized,
&lt;span style="color:#f1fa8c">`{&amp;#34;request_id&amp;#34;:&amp;#34;&amp;lt;&amp;lt;PRESENCE&amp;gt;&amp;gt;&amp;#34;,&amp;#34;code&amp;#34;:50000,&amp;#34;status_code&amp;#34;:401,&amp;#34;message&amp;#34;:&amp;#34;token 验证失败：未识别的 payload&amp;#34;}`&lt;/span>,
},
{
&lt;span style="color:#f1fa8c">&amp;#34;get_account_info&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#34;GET&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#34;/api/v1/account/1155501&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span>,
header,
http.StatusOK,
&lt;span style="color:#f1fa8c">`{&amp;#34;request_id&amp;#34;:&amp;#34;&amp;lt;&amp;lt;PRESENCE&amp;gt;&amp;gt;&amp;#34;,&amp;#34;message&amp;#34;:&amp;#34;success&amp;#34;,&amp;#34;code&amp;#34;:0,&amp;#34;data&amp;#34;:{&amp;#34;union_id&amp;#34;:1155501,&amp;#34;status&amp;#34;:&amp;#34;valid&amp;#34;,&amp;#34;created_at&amp;#34;:&amp;#34;2021-06-18T14:57:18+08:00&amp;#34;,&amp;#34;updated_at&amp;#34;:&amp;#34;2021-06-22T10:44:26+08:00&amp;#34;}}`&lt;/span>,
},
{
&lt;span style="color:#f1fa8c">&amp;#34;account_not_found&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#34;GET&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#34;/api/v1/points/account/1551734&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span>,
header,
http.StatusOK,
&lt;span style="color:#f1fa8c">`{&amp;#34;request_id&amp;#34;:&amp;#34;&amp;lt;&amp;lt;PRESENCE&amp;gt;&amp;gt;&amp;#34;,&amp;#34;code&amp;#34;:42003,&amp;#34;status_code&amp;#34;:400,&amp;#34;message&amp;#34;:&amp;#34;parameter union_id is invalid.&amp;#34;}`&lt;/span>,
},
}
&lt;span style="color:#ff79c6">for&lt;/span> _, tc &lt;span style="color:#ff79c6">:=&lt;/span> &lt;span style="color:#ff79c6">range&lt;/span> items {
tests.&lt;span style="color:#50fa7b">Endpoint&lt;/span>(t, c.router, tc)
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>mockNewServer&lt;/code> 就是起一个 Server，具体每个项目都不太一样&lt;/li>
&lt;li>接口如果需要鉴权的话，要传入 &lt;code>token&lt;/code> 数据。 我们使用的是在 &lt;code>header&lt;/code> 里面传入 &lt;code>JWT&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="mock-第三方接口">Mock 第三方接口&lt;/h2>
&lt;p>有时候我们的项目会依赖另外一个项目的接口，就比分说发通知的功能，我们会单独请求一个通知系统的接口给用户发通知，这种情况如何写测试代码呢？&lt;/p>
&lt;p>首先要明确的是我们不会测试第三方接口的服务，所以这里我们就断言第三方接口一定会返回我们需要的数据。使用 Mock 方式就能达到这个需求。&lt;/p>
&lt;p>我们使用的是 &lt;a href="https://github.com/jarcoal/httpmock">jarcoal/httpmock&lt;/a> 这个包，可以很好的满足我们的需求。&lt;/p>
&lt;p>使用方法我们分两步：&lt;/p>
&lt;h3 id="先定义-mock-数据">先定义 Mock 数据&lt;/h3>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8be9fd;font-style:italic">type&lt;/span> mockServiceAPI &lt;span style="color:#8be9fd;font-style:italic">struct&lt;/span> {
Method &lt;span style="color:#8be9fd">string&lt;/span>
URL &lt;span style="color:#8be9fd">string&lt;/span>
Body &lt;span style="color:#8be9fd">string&lt;/span>
WantStatus &lt;span style="color:#8be9fd">int&lt;/span>
WantResponse &lt;span style="color:#8be9fd">string&lt;/span>
}
&lt;span style="color:#8be9fd;font-style:italic">func&lt;/span> &lt;span style="color:#50fa7b">MockNotificationServiceAPI&lt;/span>() {
&lt;span style="color:#6272a4">// 读配置文件
&lt;/span>&lt;span style="color:#6272a4">&lt;/span> domain &lt;span style="color:#ff79c6">:=&lt;/span> config.&lt;span style="color:#50fa7b">GetString&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;notification_service_api&amp;#34;&lt;/span>)
items &lt;span style="color:#ff79c6">:=&lt;/span> []mockServiceAPI{
{
http.MethodPost,
&lt;span style="color:#f1fa8c">&amp;#34;/api/v1/template/send&amp;#34;&lt;/span>,
&lt;span style="color:#f1fa8c">`{&amp;#34;app_key&amp;#34;:&amp;#34;website&amp;#34;,&amp;#34;topic&amp;#34;:&amp;#34;points&amp;#34;,&amp;#34;topic_sub_key&amp;#34;:&amp;#34;login&amp;#34;,&amp;#34;types&amp;#34;:[&amp;#34;mail&amp;#34;],&amp;#34;data&amp;#34;:[{&amp;#34;union_id&amp;#34;:1551630,&amp;#34;template_data&amp;#34;:{&amp;#34;url&amp;#34;:&amp;#34;https://blog.forecho.com/&amp;#34;}}]}`&lt;/span>,
http.StatusOK,
&lt;span style="color:#f1fa8c">`{&amp;#34;code&amp;#34;: 200,&amp;#34;msg&amp;#34;: &amp;#34;请求成功&amp;#34;,&amp;#34;data&amp;#34;: []}`&lt;/span>,
},
}
&lt;span style="color:#ff79c6">for&lt;/span> _, item &lt;span style="color:#ff79c6">:=&lt;/span> &lt;span style="color:#ff79c6">range&lt;/span> items {
httpmock.&lt;span style="color:#50fa7b">Activate&lt;/span>()
httpmock.&lt;span style="color:#50fa7b">RegisterResponder&lt;/span>(
&lt;span style="color:#f1fa8c">&amp;#34;POST&amp;#34;&lt;/span>,
fmt.&lt;span style="color:#50fa7b">Sprintf&lt;/span>(&lt;span style="color:#f1fa8c">&amp;#34;%s%s&amp;#34;&lt;/span>, domain, item.URL),
httpmock.&lt;span style="color:#50fa7b">NewStringResponder&lt;/span>(item.WantStatus, item.WantResponse),
)
}
}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="使用-mock">使用 Mock&lt;/h3>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:2;-o-tab-size:2;tab-size:2">&lt;code class="language-go" data-lang="go">&lt;span style="color:#8be9fd;font-style:italic">func&lt;/span> &lt;span style="color:#50fa7b">TestSendNotification&lt;/span>(t &lt;span style="color:#ff79c6">*&lt;/span>testing.T) {
tests.&lt;span style="color:#50fa7b">MockNotificationServiceAPI&lt;/span>()
&lt;span style="color:#ff79c6">defer&lt;/span> httpmock.&lt;span style="color:#50fa7b">DeactivateAndReset&lt;/span>()
&lt;span style="color:#6272a4">// something test code
&lt;/span>&lt;span style="color:#6272a4">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>加入上面两行代码之后，跑测试时请求的第三方接口（URL 一致的话）会直接返回我们的 Mock 数据，非常方便。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>测试是非常有必要写的，特别是核心代码的测试一定要覆盖到，为以后重构或者修改需求都带来更多保障。&lt;/p>
&lt;p>回顾一下今天主要就是分享了一下接口功能测试以及如何 Mock API 返回的数据，帮忙更好的写测试。&lt;/p>
&lt;p>希望本篇文章分享对你有帮助。&lt;/p></description></item><item><title>【深度理财 32】远离中概股，我都投资了哪些非中概股</title><link>https://blog.forecho.com/financedeep-32.html</link><pubDate>Thu, 29 Jul 2021 10:59:00 +0800</pubDate><guid>https://blog.forecho.com/financedeep-32.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>这个月中概股有多惨，我就不说了，自从滴滴上市以来，引发了中概股一系列因为政策原因大跌，还好我中概股仓位不算太多（不过也亏了很多）。&lt;/p>
&lt;p>今年年初的时候我分享过自己的持仓，感兴趣可以去看看&lt;a href="https://blog.forecho.com/financedeep-19.html">《【深度理财 19】2020 年年终总结投资篇》&lt;/a>，这篇文章我主要是分享我持有的一些非中概股。&lt;/p>
&lt;blockquote>
&lt;p>加一个风险提示：本篇文章仅代表我的个人观点，不构成与其他人相关的任何投资建议。在作出任何投资决定前，投资者应根据自身情况考虑投资产品相关的风险因素，并于需要时咨询专业投资顾问意见。&lt;/p>
&lt;/blockquote>
&lt;h2 id="保持不变">保持不变&lt;/h2>
&lt;h3 id="tsla">TSLA&lt;/h3>
&lt;p>虽然今年特斯拉回撤很大，但我依然长期好看，目前 TSLA 是我第一大仓位。虽然马斯克这半年炒币割韭菜，吃香难看，我都有点反感了。&lt;/p>
&lt;h3 id="amd--nvda">AMD &amp;amp;&amp;amp; NVDA&lt;/h3>
&lt;p>半导体行业，两个我都投资了，NVDA 仓位比 AMD 大，AMD 被我玩期权，卖了很多了。现在全球都在缺芯片，所以是非常值得投资的。&lt;/p>
&lt;h3 id="snap">SNAP&lt;/h3>
&lt;p>年轻的社交 SNAP，用户高速增长，粘性高。收入主要靠广告和商家定制的滤镜，未来游戏也有赚钱的很大潜力。&lt;/p>
&lt;p>风险：&lt;/p>
&lt;ul>
&lt;li>上市不到 5 年，估值偏高，用户是否还能持续保持高速增长？&lt;/li>
&lt;li>公司目前处于亏损状态，但是好在亏损在逐渐减少&lt;/li>
&lt;/ul>
&lt;p>继续持仓。&lt;/p>
&lt;h3 id="tdd">TDD&lt;/h3>
&lt;p>SaaS 广告领域，SaaS 的特点就是现金流比较好，虽然减持了一些，但是依然持仓。&lt;/p>
&lt;h2 id="开仓">开仓&lt;/h2>
&lt;h3 id="se--meli">SE &amp;amp;&amp;amp; MELI&lt;/h3>
&lt;p>清仓 PDD，中概股受政策影响大，但是又看好电商，于是找到了 SE 和 MELI&lt;/p>
&lt;ul>
&lt;li>SE 是东南亚电商 Shopee 的母公司，公司主要发展电商 + 游戏，Shopee 已经干过阿里投资的 Lazada 了。&lt;/li>
&lt;li>MELI 是南美洲电商 + 支付，竞争对手主要是亚马逊。&lt;/li>
&lt;/ul>
&lt;h3 id="inmd">INMD&lt;/h3>
&lt;p>最近才开仓的以色列医美仪器公司。公司财报非常不错，公司是盈利的，医美利润率非常高。目前公司总市值只有 43 亿，有点担心被庄家控盘，所以目前只买了小仓位。&lt;/p>
&lt;h2 id="清仓">清仓&lt;/h2>
&lt;h3 id="msft">MSFT&lt;/h3>
&lt;p>嫌弃涨的比较慢，给清仓了，但是不可否认 MSFT（微软）也是非常抗跌的。&lt;/p>
&lt;h3 id="sq">SQ&lt;/h3>
&lt;p>虽然是支付，但是跟比特币有点关联，比特币波动有点大，我就暂时清仓了。&lt;/p>
&lt;h3 id="roku--zm">ROKU &amp;amp;&amp;amp; ZM&lt;/h3>
&lt;p>ROKU &amp;amp;&amp;amp; ZM 都算是疫情受益股，疫情好转我担心后面会跌，于是就清仓了。&lt;/p>
&lt;h3 id="bynd">BYND&lt;/h3>
&lt;p>也是跟疫情有关系的股票，也清仓了。&lt;/p>
&lt;h3 id="中概股">中概股&lt;/h3>
&lt;p>大部分中概股我都清仓止损了。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>今年上半年美股成长股回调的很多，我的持仓大多数是成长股，所以也亏损了很多。最近又收到了中概股一波冲击，今年账户已经亏损了 -50% 了。&lt;/p>
&lt;p>美股跌了，还会涨回去，但是中概股就难说了，特别是这次教育股事件，好未来股票直接腰斩，想想我去年还是持仓过好未来的，幸亏去年回本了之后就清仓了，政策影响太大，所以决定以后还是少碰中概股。&lt;/p>
&lt;p>目前唯一看好的中概股就是 NIO 了，电动车目前是被国家扶持的，而且长期看来是未来趋势，电动车也没有什么政治风险。至于清仓的 ROKU 和 SQ，以后想找机会再买回来。&lt;/p>
&lt;p>买的股票个数不在于多，太多了也不好。&lt;/p>
&lt;h2 id="交流群">交流群&lt;/h2>
&lt;p>投资交流群，目前微信群比较活跃，想投资交流的欢迎进群（免费）。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://t.me/joinchat/HLo343KtlcmNgfmF">Telegram&lt;/a>&lt;/li>
&lt;li>微信群：由于群已经满了 200 人了，想加群的朋友先加我微信 ipzone 我拉你进群，申请好友请备注来意。&lt;/li>
&lt;/ul></description></item><item><title>【深度理财 31】盈立智投使用测评</title><link>https://blog.forecho.com/financedeep-31.html</link><pubDate>Fri, 23 Jul 2021 10:59:00 +0800</pubDate><guid>https://blog.forecho.com/financedeep-31.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>香港卡开了当然要找证券入金了，之前我一直在用的有富途、雪盈、老虎。这次我选了一个盈立智投，体验了差不多快一个月了，今天就来分享（吐槽）使用经验。&lt;/p>
&lt;p>没开户的可以使用这个开户：&lt;/p>
&lt;ul>
&lt;li>开户链接：&lt;a href="http://link.3li3.com/yxzq">http://link.3li3.com/yxzq&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210723iBxsf0.jpg!s" alt="盈立智投开户">&lt;/p>
&lt;h2 id="特色">特色&lt;/h2>
&lt;h3 id="协助办香港卡">协助办香港卡&lt;/h3>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/202107230OmSMA.jpg!m" alt="">&lt;/p>
&lt;p>开户之后可以在「市场」Tab 的「办卡预约」里面预约办理香港卡，都是在大陆见证开户，不需要去香港，不过门槛也不算低。&lt;/p>
&lt;h3 id="支持大陆卡入金">支持大陆卡入金&lt;/h3>
&lt;p>官方说成功率高达 90%，注册之后可以咨询专属客户经理。&lt;/p>
&lt;h3 id="策略">策略&lt;/h3>
&lt;p>这算是盈立的特色了，他们有专业的投资顾问，注册或者入金之后都能看到这些投资顾问的投资策略，这些策略可以看的门槛不一样，有的注册就能看，有的需要入金达到 2 万港币才可以看。&lt;/p>
&lt;p>如果你平常比较忙，如果看好某个可全权委托的策略（部分策略支持）之后会自动跟单操作。下图是一个免费的策略，事后看来当初的清仓港股是非常明智的。让人不佩服他们的策略，选股和择时，真的挺负责的。&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210723Comot5.JPEG" alt="">&lt;/p>
&lt;h3 id="日内融">日内融&lt;/h3>
&lt;p>最大 20 倍融资，不过平均都在 10 倍左右，港股美股都支持，但是只是部分股票，可惜 AMC 和 GME 不支持。我刚开户的时候还是体验了几次，几次下来，有赚有赔，最终还是小亏。&lt;/p>
&lt;p>不过这种短期操作太难了，感觉就是在赌博，玩过几次之后还是暂时收手了。等行情好了再看吧。我介绍一下玩法：&lt;/p>
&lt;ul>
&lt;li>开市到收市前 30 分钟才可以建仓&lt;/li>
&lt;li>收市前 30 分钟之后不支持下单，并且系统自动撤掉未成交的委托单&lt;/li>
&lt;li>收市前 20 分钟系统自动平仓&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210723nhuldh.jpg!m" alt="">&lt;/p>
&lt;p>日内融，下单界面如上图，强调几点：&lt;/p>
&lt;ul>
&lt;li>默认止损比例是 80%，也是最大比例了。默认没有止盈，可以下单的时候设置，可以成交之后添加止盈比例。&lt;/li>
&lt;li>如果没设置止盈，也没有触发止损，那么收盘前 20 分钟会自动按市价平仓。&lt;/li>
&lt;li>挂单的时候可以选市价，也可以指定价格，如果是市价的话，一般为了保证买入，我发现系统会出价高于市价挂单交易的，所以我感觉按市价成交有点亏。&lt;/li>
&lt;/ul>
&lt;p>我资金少，玩了几把，就没玩了，交易手续费 2+ 美元/次，所以资金少玩这个不太划算。&lt;/p>
&lt;h3 id="打新">打新&lt;/h3>
&lt;p>刚入金，最近港股打新打中了破发，没中签的涨了很多，所以打新我也没那么多热情了。&lt;/p>
&lt;p>不过盈立有美股打新。&lt;/p>
&lt;h3 id="其他">其他&lt;/h3>
&lt;ul>
&lt;li>定投买股票，这个有香港卡比较方便。&lt;/li>
&lt;/ul>
&lt;h3 id="期权">期权&lt;/h3>
&lt;p>期权和富途功能差不多的，不过好像交易费要便宜点。&lt;/p>
&lt;h2 id="吐槽">吐槽&lt;/h2>
&lt;ul>
&lt;li>交易的时候只支持输密码方式，输密码交易太慢了，什么时候支持指纹/人脸解密？&lt;/li>
&lt;li>除了日内融，盈立好像不支持融资融券。&lt;/li>
&lt;li>整体 UI 不如富途、老虎&lt;/li>
&lt;/ul>
&lt;h2 id="交易费用">交易费用&lt;/h2>
&lt;p>有三种套餐，可以按月切换，有低佣金套餐、高频交易套餐、免平台费的套餐。我目前用的低佣金套餐，感觉比富途便宜点。&lt;a href="https://www.usmart8.com/mainland/charges">详情&lt;/a>你们自己去看吧。&lt;/p>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>整体下来我觉得盈立还是不错的美股证券平台，有自己的特色，比方说策略、日内融等等。最近他们刚好在搞两周年活动，开户入金有很多福利：&lt;/p>
&lt;ul>
&lt;li>开户链接：&lt;a href="http://link.3li3.com/yxzq">http://link.3li3.com/yxzq&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210723iBxsf0.jpg!s" alt="盈立智投开户">&lt;/p>
&lt;ul>
&lt;li>🎉 福利 1：活动期间新注册用户可获得 *1 次大转盘抽奖机会&lt;/li>
&lt;li>🎉 福利 2：活动期间新开户用户赠送合计 600HKD 的融资打新手续费抵扣券（1*100HKD，6*50HKD，10*20HKD）&lt;/li>
&lt;li>🎉 福利 3：活动期间首次入金也可以获得 1 次抽奖机会，且大奖中奖概率翻倍！&lt;/li>
&lt;/ul>
&lt;p>奖池包含 iPhone12/特斯拉股票/永久免佣等。除此之外，现在还有入金三重礼：&lt;/p>
&lt;ul>
&lt;li>✨ 入金 1.5 万港币起，送 188 港币价值股票卡（1 股理想汽车）&lt;/li>
&lt;li>✨ 入金 5 万-10 万港币，送 400 港币价值股票卡（2 股雾芯科技 +1 股理想汽车）&lt;/li>
&lt;li>✨ 入金 10 万港币起，送 500 港币价值股票卡（2 股雾芯科技 +1 股蔚来）&lt;/li>
&lt;/ul>
&lt;p>大陆卡入金可以联系专属客户经理：打开盈立 APP——点击头像——账户相关——客户经理&lt;/p></description></item><item><title>【深度理财 30】如何办一张汇丰香港卡</title><link>https://blog.forecho.com/financedeep-30.html</link><pubDate>Thu, 08 Jul 2021 10:59:00 +0800</pubDate><guid>https://blog.forecho.com/financedeep-30.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>受疫情影响香港不知道什么时间解封，而目前在大陆见证办香港卡的渠道是越来越少了。本篇文章就是来分享我如何办汇丰香港卡的经历的。&lt;/p>
&lt;h2 id="办卡门槛">办卡门槛&lt;/h2>
&lt;ul>
&lt;li>费用：0&lt;/li>
&lt;li>条件：港澳通行证（签证过期不用管，证件没过期就行），不需要护照&lt;/li>
&lt;li>门槛：50 万理财，但是如果是上市公司，在他们企业白名单内，可以不需要 50 万理财&lt;/li>
&lt;li>时间：下卡时间要 1 个月左右，但是作为汇丰卓越理财卡，如果卡里面余额不够 50 万的话，会收 300 元人民币/月的服务费。&lt;/li>
&lt;/ul>
&lt;h2 id="流程">流程&lt;/h2>
&lt;h3 id="预约">预约&lt;/h3>
&lt;p>如果要办，可以加我微信号「ipzone」，暗号「汇丰」，我发你开户预约链接。&lt;/p>
&lt;h3 id="开大陆卡">开大陆卡&lt;/h3>
&lt;p>时间：&lt;code>2021-05-06&lt;/code>&lt;/p>
&lt;p>预约成功之后会有汇丰的工作人员联系你，确认你要开通，并且有资格开通之后，你们就可以约办汇丰大陆卡了，要上门办理，而且只能工作日上门。&lt;/p>
&lt;p>开户大概需要 2 个小时左右。&lt;/p>
&lt;p>时间：&lt;code>2021-05-14&lt;/code>&lt;/p>
&lt;p>准备好港澳通行证，今天接到汇丰客服的电话，确认消息，然后按照他们要求打印一份文件签字拍照上传，一同上传的还有身份证和港澳通行证照片。&lt;/p>
&lt;h3 id="收到卡">收到卡&lt;/h3>
&lt;p>时间：&lt;code>2021-05-17&lt;/code>&lt;/p>
&lt;p>收到汇丰大陆卡的快递。&lt;/p>
&lt;h3 id="存款">存款&lt;/h3>
&lt;p>时间：&lt;code>2021-05-21&lt;/code>&lt;/p>
&lt;p>由于我只能走 50 万渠道办理，所以等我存了 50 万之后通知他们，他们才会帮我申请办理汇丰香港卡。&lt;/p>
&lt;p>50 万可以买基金或者结构性存款，两个区别：&lt;/p>
&lt;ul>
&lt;li>结构性存款：定期存款，最少存 99 天，3.6% 的利率，投资风险小，买入不收费&lt;/li>
&lt;li>基金：基金就有很多种了，会按照你的风险承受能力给你推荐，我选择非常保守的风格，L2 级别的。他们那边的理财顾问给我推荐了两个货币基金。基金买入一般收费 2% 的费用（有点贵），另外还有管理费，赎回不收费。&lt;/li>
&lt;/ul>
&lt;p>基金虽然收益比结构性存款高一点，但是我算了一下，短期来说还是买结构性存款好。基金买入费用太贵了，虽然基金每个月有一点分红，但是 3 个月有可能都没把买入费用赚回来。&lt;/p>
&lt;p>所以最后我买入了 30 万结构性存款，20 万买了基金，等结构性存款到期之后就知道我的猜测是否正确了。&lt;/p>
&lt;blockquote>
&lt;p>三个月过去了，我来更新，果然买基金亏钱了，幸亏大部分钱买的是结构性理财，总体上没亏很多 😭&lt;/p>
&lt;/blockquote>
&lt;p>另外需要吐槽的是，买结构性存款需要在工作日到他们营业厅才可以买，要走视频录制流程，大概要花费 1 个多小时，买基金只需要在手机上操作就可以，坑爹。&lt;/p>
&lt;h3 id="香港卡确认信息">香港卡确认信息&lt;/h3>
&lt;p>时间：&lt;code>2021-05-25&lt;/code>&lt;/p>
&lt;p>收到汇丰客服的电话，花了两分钟确认了办理香港卡的一些信息。&lt;/p>
&lt;p>之前办卡的时候营业厅工作人员有交代「让我把香港卡选择寄到他们营业厅」，方便激活，因为激活的时候密码一旦输错三次就只能去香港处理了，而现在去不了香港。&lt;/p>
&lt;h3 id="香港卡激活">香港卡激活&lt;/h3>
&lt;p>时间：&lt;code>2021-07-02&lt;/code>&lt;/p>
&lt;p>1 个多月了，中途有问过一次，说香港卡还没到。然后今天问的时候说前几天就到了。我因为没收到短信通知而生气了。&lt;/p>
&lt;p>又是只能工作日去拿卡，第一次跑过去，因为没带港澳通行证白跑一趟了，因为没收到短信，所以我不知道拿卡需要带港澳通行证，生气。&lt;/p>
&lt;p>激活步骤：&lt;/p>
&lt;ul>
&lt;li>先提供港澳通行证，他们确认身份&lt;/li>
&lt;li>给你密码函和实体卡，密码函里面右上角有 6 位数的密码，此密码只能去香港营业厅修改。&lt;/li>
&lt;li>激活只需要去 ATM 机输入密码，查看余额就可以了。&lt;/li>
&lt;li>然后通过官网注册香港网上银行，填资料。&lt;/li>
&lt;li>然后打电话给汇丰客服，找人工服务，说激活香港卡，按照提示和流程走就可以了。然后香港卡隔天就能使用了。&lt;/li>
&lt;li>登陆大陆汇丰网上银行，关联香港卡账户，此步骤需要密码器。&lt;/li>
&lt;/ul>
&lt;p>为了避免出错，网上银行和电话激活我都是在汇丰营业厅处理的。他们有一张纸上面写了这些流程。&lt;/p>
&lt;h3 id="汇款到香港卡">汇款到香港卡&lt;/h3>
&lt;p>使用大陆汇丰 App，汇款到香港卡。还是需要先购汇在境外汇款。需要注意的是：&lt;/p>
&lt;ul>
&lt;li>购汇只能在工作日操作&lt;/li>
&lt;li>需要密码器&lt;/li>
&lt;/ul>
&lt;p>因为之前有关联香港卡所以汇款非常快，整个操作几分钟就能搞定。汇款也很快到账。汇率是实时的，汇款不需要手续费，他们通过汇率差赚钱。&lt;/p>
&lt;h3 id="入金证券">入金证券&lt;/h3>
&lt;p>这一步骤我今天还没操作成功。转账出去不能操作，发现「每日付款及转账限额」是 0 ，但是修改的时候又提示失败，让我打电话。&lt;/p>
&lt;p>坑爹，啥都要打电话找人工服务，真麻烦。打完之后告诉我明天就可以修改了。&lt;/p>
&lt;h2 id="降级">降级&lt;/h2>
&lt;p>3个月之后我买的结构性理财也到期了，如期自动赎回了，然后我开始联系银行申请降级，毕竟占用太多资金量了。&lt;/p>
&lt;p>流程就是先与自己客户经理沟通降级的事情，然后去营业厅办理，要办理的有两个业务：&lt;/p>
&lt;ul>
&lt;li>大陆汇丰卡从「卓越理财」降级到「运筹理财」，这个在大陆汇丰营业厅签字就可以办理了，旧卡作废，新卡几天之后邮寄到家。&lt;/li>
&lt;li>香港汇丰卡从「Premier」降级到「One」，这个申请要带上港澳通行证、身份证、银行卡，然后填表申请。⚠️ 这个要提前 2 个小时跟你的客户经理沟通，因为他们要帮你先跟香港那边申请才能进行下一步。这个流程会慢一些。&lt;/li>
&lt;/ul>
&lt;p>降级之后大陆汇丰卡只需要保留 10 万就不需要管理费了。&lt;/p>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>最后总结一下，下卡时间需要花费 1 个多月，要工作日至少跑两趟营业厅。另外 50 万的利息，这些都是隐性的成本。&lt;/p>
&lt;p>我之前办过工银亚洲卡，但是因为&lt;/p>
&lt;ul>
&lt;li>两年内没用过被冻结了（之前不知道还有这个规则）&lt;/li>
&lt;li>身份证信息过期了&lt;/li>
&lt;li>密码器也过期了&lt;/li>
&lt;/ul>
&lt;p>要想解冻那张卡只能去香港，坑爹。&lt;/p>
&lt;p>现在终于有了香港卡了，这下就可以放心的投资美股了，出入金也方便了。&lt;/p></description></item><item><title>【深度理财 29】美股分析网站介绍</title><link>https://blog.forecho.com/financedeep-29.html</link><pubDate>Sun, 27 Jun 2021 10:59:00 +0800</pubDate><guid>https://blog.forecho.com/financedeep-29.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>最近有朋友咨询我一些美股分析的网站，结合我之前看过的资料，于是我整理了这篇干货文章。&lt;/p>
&lt;h2 id="网站">网站&lt;/h2>
&lt;h3 id="yahoofinance">Yahoo！Finance&lt;/h3>
&lt;ul>
&lt;li>地址：&lt;a href="https://finance.yahoo.com/">https://finance.yahoo.com/&lt;/a>&lt;/li>
&lt;li>特点：免费、大而全&lt;/li>
&lt;/ul>
&lt;p>这个不用多介绍了吧，就是一个股票门户网站，上面的资料很多，而且全部免费。&lt;/p>
&lt;h3 id="gurufocus">Gurufocus&lt;/h3>
&lt;ul>
&lt;li>地址：&lt;a href="https://www.gurufocus.com">https://www.gurufocus.com&lt;/a>&lt;/li>
&lt;li>特点：部分数据收费，图表观看数据直观&lt;/li>
&lt;/ul>
&lt;p>这个网站主要把股票的各种数据汇总之后用图表的方式展示，对数字不敏感的用户，可以使用这个网站，比方说这个是 &lt;a href="https://www.gurufocus.com/stock/TSLA/summary">TSLA&lt;/a> 的主页&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210625KMlVnn.png" alt="">&lt;/p>
&lt;p>当然这里面有些数据是收费才能看的，不过免费账户对于新手来说基本上也够用。&lt;/p>
&lt;h3 id="openinsider">OpenInsider&lt;/h3>
&lt;ul>
&lt;li>地址：&lt;a href="http://openinsider.com/">http://openinsider.com/&lt;/a>&lt;/li>
&lt;li>特点：免费&lt;/li>
&lt;/ul>
&lt;p>查询公司内部员工买卖股票记录。这个数据有时候很有用，因为只有公司内部员工才比较了解自己的公司情况，特别是高管级别的员工。这个是特斯拉公司最近的内部员工交易情况：&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210625NKKuek.png" alt="">&lt;/p>
&lt;p>有时候卖股票并不能代表什么？因为卖股票可能有个人原因，但是如果公司有大量员工买入自家公司的股票时，可能是利好消息要来了。&lt;/p>
&lt;h3 id="simply-wallst">Simply Wallst&lt;/h3>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210625fM3JSm.png" alt="">&lt;/p>
&lt;ul>
&lt;li>地址：&lt;a href="https://simplywall.st">https://simplywall.st&lt;/a>&lt;/li>
&lt;li>特点：图表、分析类、部分功能收费&lt;/li>
&lt;/ul>
&lt;p>可以查看公司的估值，以及分析师对公司未来三五年营业额和获利的估值，还可以查看公司的运营状态指标、公司持股比例等等数据。&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210628uLBeLb.png" alt="">&lt;/p>
&lt;p>关注股票之后还会收到上图这种周报的邮件，感觉很实用。&lt;/p>
&lt;h3 id="tipranks">Tipranks&lt;/h3>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/202106257oyRhz.png" alt="">&lt;/p>
&lt;ul>
&lt;li>地址：&lt;a href="https://www.tipranks.com/">https://www.tipranks.com/&lt;/a>&lt;/li>
&lt;li>特点：部分功能收费，查看分析师的目标价&lt;/li>
&lt;/ul>
&lt;p>查看分析师给公司股票的目标价，而且还能追踪给的目标价准确率（收费功能），数据当然只是仅当参考，不要无脑跟单。&lt;/p>
&lt;h2 id="其他分析网站">其他分析网站&lt;/h2>
&lt;ul>
&lt;li>Macrotrends &lt;a href="https://www.macrotrends.net/">https://www.macrotrends.net/&lt;/a>&lt;/li>
&lt;li>Seeking Alpha &lt;a href="https://seekingalpha.com/">https://seekingalpha.com/&lt;/a>&lt;/li>
&lt;li>Motley Fool &lt;a href="https://www.fool.com/">https://www.fool.com/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>数据分析只是辅助作用，我是不太相信技术炒股的。所以以上网站只是帮你做决策的工具，炒股最重要的是你该什么时候做出怎样的决策。&lt;/p></description></item><item><title>薅京东羊毛</title><link>https://blog.forecho.com/get-the-jd-best-deal.html</link><pubDate>Thu, 24 Jun 2021 18:09:00 +0800</pubDate><guid>https://blog.forecho.com/get-the-jd-best-deal.html</guid><description>&lt;h2 id="更新">更新&lt;/h2>
&lt;p>此方法已经不再适用，这种方式违反了 GitHub Actions 使用条款，账号 Github Actions 有被禁用的风险，别问我是为什么知道的？🤦‍♂️&lt;/p>
&lt;p>而且 GitHub Actions 如果被禁用，申诉的话，要一个月左右，😭 他们工单处理效率太低了。但是你可以在自己服务器上使用 docker 方式部署。&lt;/p>
&lt;h2 id="引言">引言&lt;/h2>
&lt;p>本篇文章主要分享「如何通过脚本实现自动签到等功能获取京东京豆？」，京豆可以在京东购物的时候抵现金，1000 京东抵扣 10 块钱。平台会员一个月能自动获取 1000 左右的京豆吧，如果你是 PLUS 会员，会有更多。&lt;/p>
&lt;p>本篇教程需要懂程序，主要面向程序员，第一个需要花点时间配置和熟悉，后面每个月也需要花几分钟更新一下就可以了。&lt;/p>
&lt;h2 id="教程">教程&lt;/h2>
&lt;h3 id="fork-代码">Fork 代码&lt;/h3>
&lt;p>源码在 &lt;a href="https://github.com/forecho/scripts-JD">forecho/scripts-JD&lt;/a> ，你需要先 Fork 一份。&lt;/p>
&lt;p>跑这个脚本有好几种方法，我使用的是 GitHub Action，我也推荐大家使用这种方式，免费，简单好用。你基本上不用操作什么。&lt;/p>
&lt;h3 id="配置-cookie">配置 Cookie&lt;/h3>
&lt;p>Fork 代码之后，找到项目的「Settings」-&amp;gt;「Secrets」，然后点击 &lt;code>New repository secret&lt;/code> 添加 &lt;code>JD_COOKIE&lt;/code> 环境变量&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210624SwmqXY.png" alt="">&lt;/p>
&lt;p>&lt;code>JD_COOKIE&lt;/code> 的值是通过先登录你自己账号，获取 cookie 再过滤重组得到的。具体操作步骤请看：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/forecho/scripts-JD/blob/master/backUp/GetJdCookie.md">浏览器获取京东 cookie 教程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/forecho/scripts-JD/blob/master/backUp/GetJdCookie2.md">浏览器插件获取京东 cookie 教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>我们都知道 cookie 一般都是有有效期，一般这个步骤 30 天之后需要再重新操作一遍。&lt;/p>
&lt;h3 id="配置通知">配置通知&lt;/h3>
&lt;p>这个虽然不是必填，但是有了通知才放心，才能在 cookie 过期之后第一时间及时处理。&lt;/p>
&lt;p>通知具体方案请看文档 &lt;a href="https://github.com/forecho/scripts-JD/blob/master/githubAction.md#%E4%B8%8B%E6%96%B9%E6%8F%90%E4%BE%9B%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84-secrets%E5%85%A8%E9%9B%86%E5%90%88">《下方提供使用到的 Secrets 全集合》&lt;/a>。我用的 telegram 通知，感觉最方便了，效果如下：&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210624i9nBbD.png" alt="">&lt;/p>
&lt;p>这个根据你自己的情况按需配置就可以了。&lt;/p>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>这个脚本太强大了，不仅能自动而且还可以配置多个京东账号，虽然每天获取的京豆看上去不多，但是积水成渊，一个月免费获得 10 块钱不香吗？&lt;/p>
&lt;p>而且配置起来也花不了多少时间。&lt;/p></description></item><item><title>浮生一日：深圳非典型程序员的真实一天</title><link>https://blog.forecho.com/life-in-a-day.html</link><pubDate>Mon, 14 Jun 2021 18:03:00 +0800</pubDate><guid>https://blog.forecho.com/life-in-a-day.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>这篇文章我打算模仿最近看了一个系列视频的采访风格，以文字的形式记录下我（深圳程序员）真实的一天。&lt;/p>
&lt;h2 id="典型的工作日">典型的工作日&lt;/h2>
&lt;h3 id="655">6:55&lt;/h3>
&lt;p>虽然我定的是 &lt;code>6:55&lt;/code> 的闹钟，但是大概率我会比这个早起床。起床第一件事是跑去厕所，边上厕所，边打开&lt;a href="http://link.3li3.com/futu">富途&lt;/a>和&lt;a href="http://link.3li3.com/xueying">雪盈&lt;/a>查看昨晚上美股的收益情况。&lt;/p>
&lt;p>然后再看看京东金融和支付宝的收益情况。上完厕所就开始洗漱了。&lt;/p>
&lt;h3 id="730">7:30&lt;/h3>
&lt;p>一般这个点我都洗漱完成了，离出门上班还有一段时间，这段时间我一般会做这三件事情：&lt;/p>
&lt;ul>
&lt;li>边看 YouTube 或者其他视频（有时候是炒股类的有时候是程序员技术类）边做健身环大冒险，一般做 40 分钟左右（60%）&lt;/li>
&lt;li>炒菜还有早餐（40%）&lt;/li>
&lt;li>看书或者继续睡觉（5%）&lt;/li>
&lt;/ul>
&lt;p>这三件事情，健身我一般会隔一天做一次，如果健身完还有时间做饭我就做，没时间的话就只做早餐。不健身的话，我就炒菜做饭。如果不需要做饭我就看看书，如果感觉昨晚上没睡好接着再睡会儿。&lt;/p>
&lt;h3 id="857">8:57&lt;/h3>
&lt;p>这个点我必须出门上班了，地铁站就在我家楼下，&lt;code>8:57&lt;/code> 之前出门，能保证我在 &lt;code>9:30&lt;/code> 之前可以在地铁站上打卡上班。地铁站上信号不好，人少的时候我一般都是看书（纸质书或者 Kindle），人多的时候只能发呆或者滑手机。&lt;/p>
&lt;p>到公司之后看看港股和 A 股的行情，然后 &lt;code>10:00&lt;/code> 左右开始工作了。&lt;/p>
&lt;p>早上状态好就开始写代码，状态不好就到处逛逛，看看需求，思考怎么实现。&lt;/p>
&lt;p>我们现在已经不开早会了。&lt;/p>
&lt;h3 id="1215">12:15&lt;/h3>
&lt;p>这个点我一般去上个厕所，然后准备 &lt;code>12:30&lt;/code> 去公司楼下食堂吃饭了，我很少情况下会点外卖，带饭的情况也很少，早上炒菜：&lt;/p>
&lt;ul>
&lt;li>一是为了给一直在家学习插画的兔子方便吃午餐&lt;/li>
&lt;li>二是为了我晚上回去有饭吃&lt;/li>
&lt;/ul>
&lt;h3 id="1319">13:19&lt;/h3>
&lt;p>吃完午饭，我就上来看个十几分钟的 YouTube，一般都是看最新的一些电影预告片等娱乐视频，公司网络自带梯子，然后在 &lt;code>13:19&lt;/code> 的时候我必须要午睡了，睡到 &lt;code>14:00&lt;/code> 开始上班。&lt;/p>
&lt;h3 id="1540">15:40&lt;/h3>
&lt;p>下午一般比较忙，但是到了这个点我一般都休息一下或者去上个厕所，坐了一天也累了。然后看看 A 股和港股的收盘情况。到了 &lt;code>16:00&lt;/code> 顺便看看美股的盘前行情。&lt;/p>
&lt;h3 id="1830">18:30&lt;/h3>
&lt;p>到这个点我们就可以下班了，目前我在的公司很少加班，到点下班。虽然我们公司和大部分公司上下班都晚半个小时（错峰），但是这个点下班地铁站门口排队进站的人还是有点多的。&lt;/p>
&lt;h3 id="2000">20:00&lt;/h3>
&lt;p>这个点我一般都回家了，跟兔子一起吃晚餐，我们习惯性的边刷剧边吃饭，饭吃完了剧还在刷 😂。上班太累了，晚上只想无脑刷剧放松。&lt;/p>
&lt;h3 id="2100">21:00&lt;/h3>
&lt;p>这个点我们就开始轮流洗澡了，洗完澡我就开始刷盘子了，一到 &lt;code>21:30&lt;/code> 我就开始打开&lt;a href="http://link.3li3.com/futu">富途&lt;/a>看美股行情了，然后和群友交流。&lt;/p>
&lt;h3 id="2300">23:00&lt;/h3>
&lt;p>用 Day One 简单的记录这一天的经历，然后准备睡觉了。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>写这篇文章是因为最近发现一个有趣的系列视频，是《浮生一日》系列，&lt;a href="https://www.youtube.com/channel/UCIs3-LcOCdpiGve6yu1-Fug">YouTube&lt;/a> 和 &lt;a href="https://space.bilibili.com/110930331">B 站&lt;/a>都有。&lt;/p>
&lt;p>这系列视频主要是采访各行各业，不同人的真实的一天生活。因为特别真实，而且能满足了解其他行业的好奇心，所以我一口气看了好几期，特别好看，推荐给大家。&lt;/p>
&lt;p>简单总结了自己的一天之后我发现：&lt;/p>
&lt;ul>
&lt;li>除了工作之外我把时间大部分都花在追剧和炒股（看行情等无意义的事情）上了。&lt;/li>
&lt;li>相比《浮生一日》系列视频，我太不够优秀了。&lt;/li>
&lt;li>该反思看书和学习的时间太少了。&lt;/li>
&lt;li>写完之后我发现这篇文章（我的生活）可能跟程序员并没有多少关系 😂。&lt;/li>
&lt;/ul></description></item><item><title>【深度阅读 第四季 02】解密 Instagram</title><link>https://blog.forecho.com/readeep-s04e02.html</link><pubDate>Mon, 31 May 2021 18:40:58 +0800</pubDate><guid>https://blog.forecho.com/readeep-s04e02.html</guid><description>&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/202105319Ux3KN.png!m" alt="《解密 Instagram》">&lt;/p>
&lt;h2 id="一段话说明这本书主要讲什么">一段话说明『这本书主要讲什么？』&lt;/h2>
&lt;p>一本讲 Instagram 的传记，但是不是以采访的方式。&lt;/p>
&lt;h2 id="印象深刻点">印象深刻点&lt;/h2>
&lt;h3 id="关于创始人">关于创始人&lt;/h3>
&lt;p>主要创始人是 Kevin Systrom，在斯坦福上学，父母都是大公司高管，是标准的精英人士，在创办 Instagram 之前有幸收到 Zuckerberg 的工作邀请，但是后来拒绝了这份工作机会。&lt;/p>
&lt;p>在 Odeo 实习的时候认识了 Jack，就是的 Twitter 创始人。去过 Google 工作，但是工作不开心。后来加入创业公司 NextStop。&lt;/p>
&lt;p>后来创业，因为投资人的要求需要找联合创始人，然后找到了学弟 Mike Krieger，这个人也非常关键。&lt;/p>
&lt;p>两个创始人一个负责产品战略一个负责技术，不干预对方的事情，而且都对对方做的事情不感兴趣。我觉得这种关系非常重要。&lt;/p>
&lt;h3 id="instagram-由来">Instagram 由来&lt;/h3>
&lt;p>Burbn 是他们做的第一款产品，名字来源于威士忌酒，主要功能是用户发布自己的位置或者行程，如果朋友感兴趣可以加入。刚开始产品有三个核心功能&lt;/p>
&lt;ul>
&lt;li>分享行程；&lt;/li>
&lt;li>上传照片；&lt;/li>
&lt;li>虚拟奖励；&lt;/li>
&lt;/ul>
&lt;p>后来这个产品失败了。他们经过复盘，最后决定做一款上传照片的 App，因为只有这个才是高频刚需。&lt;/p>
&lt;h3 id="滤镜的由来">滤镜的由来&lt;/h3>
&lt;p>Kevin 和女友闲聊，得出结论如果照片不好看，用户就不太愿意上传照片，所以滤镜就是为了美化照片，只能上传方形照片，是因为那个时候手机网络并不快，方形能加快上传照片。&lt;/p>
&lt;h3 id="明星入驻">明星入驻&lt;/h3>
&lt;p>贾斯汀·比伯因为女友喜欢用 Instagram，他也跟着用了，因为比伯粉丝众多，可以带来巨大流量，他的经纪人想让 Instagram 给入驻费，不过 Instagram 坚决不给（不愿意通过付费的形式拉人入驻）。比伯停用了一段时间 Instagram 之后又开始用了。&lt;/p>
&lt;h3 id="拒绝转发">拒绝转发&lt;/h3>
&lt;p>Instagram 坚决不做转发，虽然转发能带来巨大的传播属性，但是没有转发，用户才愿意原创。这是与 Twitter 最大的区别。&lt;/p>
&lt;h3 id="和-twitter-的渊源">和 Twitter 的渊源&lt;/h3>
&lt;p>因为 Twitter 创始人是早期 Instagram 投资人，免费利用 Twitter 帮忙带流量。Twitter 内斗比较严重，第一次想收购 Instagram 的时候，因为内斗没执行，那个时候的 CEO 瞧不上 Instagram，自认为 Twitter 才能改变世界。&lt;/p>
&lt;p>第二次准备收购的时候，最终被 FaceBook 截胡了。Kevin 和 Jack 的关系也因此断裂。&lt;/p>
&lt;h3 id="为什么愿意被-facebook-收购">为什么愿意被 FaceBook 收购&lt;/h3>
&lt;ul>
&lt;li>FaceBook 开出的价格很诱人&lt;/li>
&lt;li>FaceBook 愿意保留他们的权利，允许独立运营&lt;/li>
&lt;li>FaceBook 可以提供强大的资源支持，没收购之前服务器还经常宕机&lt;/li>
&lt;/ul>
&lt;h3 id="10-亿美元的收购">10 亿美元的收购&lt;/h3>
&lt;p>被收购的时候 Instagram 才 13 个员工，FaceBook 花 10 亿美元收购，大部分都是用 FaceBook 的股票支付，但是大部分前都归创始人两个了，其他员工得到的很少。因为要搬到 FaceBook 那边上班，有些员工甚至上班更远了。&lt;/p>
&lt;h3 id="首页算法">首页算法&lt;/h3>
&lt;p>首页刚开始是按照时间排序的，要知道普通用户一般不会留意发布信息的时候，只有营销号才深知用户一般上 Instagram 的时间段，他们会充分利用这段时间发布他们的营销信息。&lt;/p>
&lt;p>所以 Instagram 改了算法，取消按照时间排序，按照算法排序，所以你的朋友发布新照片，你会第一时间看到。因为改了算法，导致一些小营销公司倒闭了。&lt;/p>
&lt;h3 id="僵尸粉">僵尸粉&lt;/h3>
&lt;p>粉丝数是 Instagram 上激励用户的数字，但是如果 Instagram 都是僵尸粉的话，会严重影响到 Instagram 的广告商，所以他们花了很大的精力清理僵尸粉，第一次清理的时候导致很多明星一夜之间少了很多粉丝，记得有个明星因为粉丝数前后差距太大，宣布退出 Instagram 了。&lt;/p>
&lt;h3 id="snapchat">Snapchat&lt;/h3>
&lt;p>因为社交压力，Snapchat 一个以阅后即焚为特点的社交 App 火了，Instagram 都是一些光鲜亮丽的照片，但是 Snapchat 才有真实的生活照。&lt;/p>
&lt;p>Snapchat 独创了 Stories，Stories 会显示你朋友的照片或者视频，但是 24 小时之后会自动消失。&lt;/p>
&lt;p>FaceBook 后来也找过 Snapchat，想要收购他，但是他的创始人不卖。&lt;/p>
&lt;h3 id="stories">Stories&lt;/h3>
&lt;p>刚开始 Instagram 创始人「死」都不愿意开发 Stories 功能，甚至有两个员工提议他们愿意利用业余时间开发，Kevin 也没同意。&lt;/p>
&lt;p>直到后来他参加奥斯卡颁奖典礼的时候，发现很多明星都会用 Snapchat 的 Stories，他知道，如果 Instagram 还是保持不变的话，它将慢慢失去用户。&lt;/p>
&lt;p>Instagram 发布了 Stories 之后他们也不否认是「复制」Snapchat 的 ，「就像电子邮件或短信一样，Snapchat 发明了这一方式并不意味着其他公司应该避免利用这一机会。」这种说法得到媒体的一致好评，虽然用户有抱怨，但是数据很好看。&lt;/p>
&lt;p>然而 FaceBook 系很多 App 也疯狂的加上了 Stories 功能，特别是 WhatsApp 这种聊天软件，加上了之后给人感觉很奇怪。&lt;/p>
&lt;h3 id="whatsapp">WhatsApp&lt;/h3>
&lt;p>FaceBook 收购了一家 VPN（Onavo）软件公司 ，有了这款 VPN，FaceBook 就能知道现在网络上哪一款 App 非常火爆了，扎克伯格要赶在它们超越 FaceBook 打败它或者收购它。&lt;/p>
&lt;p>WhatsApp 就是一个很好的例子，本来是没机会收购的，但是因为 FaceBook 收购 Instagram 之后让其独立运营，成为 FaceBook 收购之后首个独立运营的一个案例。再加上收购是由 Kevin 去说服，让收购 WhatsApp 变得很顺利。&lt;/p>
&lt;p>2012 年 FaceBook 的时候收购 Instagram 花了 10 亿。 2014 年 WhatsApp 当时是大约有 50 名员工，但是收购价是惊人的 190 亿美元。不再有媒体怀疑 Instagram 是否值 10 亿了，他们开始觉得 Instagram 卖早了，哈哈。&lt;/p>
&lt;h3 id="facebook">FaceBook&lt;/h3>
&lt;p>FaceBook 后来深陷隐私门、数据泄露和干预总统大选等问题，让它名声变差，但是 Instagram 却没受到很多影响。不过 Instagram 也有它自己的问题，上面充斥着暴力、毒品等问题。&lt;/p>
&lt;p>FaceBook 和 Instagram 最大的做事风格不同，FaceBook 以算法为主导，但是 Instagram 是以人最为主导，Instagram 最大的账号是 @instagram 他们会推荐用户，主导社区。&lt;/p>
&lt;h3 id="离开-instagram">离开 Instagram&lt;/h3>
&lt;p>创办 Instagram 两年之后被 FaceBook 收购，然后又继续干了 6 年，两个创始人终于决定要离开 FaceBook 了，这和扎克伯格的行事有很大关系，在 Instagram 他们招聘个人都很难，要 FaceBook 同意招人（预算）。&lt;/p>
&lt;p>当时要求资源、独立和信任也没有完全实现诺言，Kevin 为了让 Instagram 保持初心做了很多努力。但是 Facebook 只容得下一个 CEO。&lt;/p>
&lt;h2 id="推荐理由">推荐理由&lt;/h2>
&lt;p>这是一本非常精彩的商业传记书，里面有很多我之前不曾了解的信息，看着我很兴奋（热血沸腾），所以这本书我基本上是一口气看完的。&lt;/p>
&lt;p>上面我讲的内容，大部分都是我凭记忆整理的，可能会有些错误，而且还有大量的内容我并没有整理出来，如果你同样喜欢商业传记类型的书，绝对不要错过这本书。&lt;/p></description></item><item><title>【深度理财 28】如何在股市动荡期使用期权赚钱</title><link>https://blog.forecho.com/financedeep-28.html</link><pubDate>Sat, 29 May 2021 10:59:00 +0800</pubDate><guid>https://blog.forecho.com/financedeep-28.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>写了几篇期权的理论知识，今天来点操作篇，这次重点讲讲如何在股市动荡期通过期权策略赚钱。&lt;/p>
&lt;p>前面我已经讲过&lt;a href="https://blog.forecho.com/financedeep-24.html">期权的基本策略&lt;/a>，对期权不了解的朋友建议先去看一下。&lt;/p>
&lt;h2 id="covered-call-策略">Covered Call 策略&lt;/h2>
&lt;p>我们先来回顾一下，卖 Call 意味着你预判目标股票接下来会横盘或者小跌，正股在期权到期日价格不会超过行权价。但是如果股票一直涨的话，期权到期行权的话你就是在「做空」了，这是一种非常危险的事情。那么本次介绍的 Covered Call 策略可以有效降低风险。&lt;/p>
&lt;p>所谓的 Covered Call 策略就是持有股票，并卖出对应的 Call 期权，预判股票在期权到期日不会涨到行权价。这种策略非常适合你长期看好某个股票，但是最近大盘情况不好，可以使用这种策略抵抗下跌风险。&lt;/p>
&lt;p>最近三个星期我都在玩这种策略，就以我长期看好的特斯拉（我持有正股）为例吧，以下三种情况我都经历了，下面我来展开说说：&lt;/p>
&lt;h3 id="正股下跌赚">正股下跌（赚）&lt;/h3>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/202105296kb4qG.jpg!m" alt="">&lt;/p>
&lt;p>上图是我 5 月 11 号卖出的一个特斯拉末日 Call 期权，行权价是 630，当时的正股价格应该是在 600 左右，我喜欢卖出行权价略高一点的 Call 期权，接下来股票的走势一路下跌，远没到
行权价，我顺利拿到了期权的权利金，也就是上图的 899 美元。&lt;/p>
&lt;p>这让我有种收租的感觉。持有正股的我，在下跌的行情下得到了「补偿」。&lt;/p>
&lt;h3 id="到期日接近行权价或者小涨小赚">到期日接近行权价或者小涨（小赚）&lt;/h3>
&lt;p>接下来的一次我又按照上次的套路继续卖出了一个略高于当前正股价格的 Call ，但是到了期权行权日那天股票一直略高于行权日，第一次遇到这种情况的时候我还会紧张，生怕被行权，一晚上没睡好。但是后来细想，即使被行权了又怎样，如果价格差距不大，大不了再找机会买回来就是了，而且加上权利金，差距不大的话，总体我还是赚的。&lt;/p>
&lt;h3 id="正股上涨亏">正股上涨（亏？）&lt;/h3>
&lt;p>股票已经连续下跌两周了，这次我还是继续卖出了一个略高于当前正股价格的 Call，不巧的是这个星期股票一路上涨，已经涨超了我的期权行权价，我的期权开始亏钱了，但是因为我有正股，我不怕被行权。&lt;/p>
&lt;p>行权意味着我要按照行权价卖出股票，股票上涨不再和我有关系，但是权利金我必须得拿，股票还可以找机会买回来。&lt;/p>
&lt;h2 id="卖-put-策略">卖 Put 策略&lt;/h2>
&lt;p>这个策略我之前也玩过几次，但是每次都输了，不过也分享一下吧。卖 Put 意味着你预判目标股票接下来会横盘或者小涨，正股在期权到期日价格不会跌过行权价。&lt;/p>
&lt;p>卖出 Put 会冻结行权的保证金，下面我也来分三种情况说说：&lt;/p>
&lt;h3 id="正股上涨赚">正股上涨（赚）&lt;/h3>
&lt;p>股票上涨，超过行权价，意味着你能拿到所有的权利金。即使大涨也不会跟你有任何关系。&lt;/p>
&lt;h3 id="到期日接近行权价或者小跌小赚">到期日接近行权价或者小跌（小赚）&lt;/h3>
&lt;p>如果股票差点儿就到了行权价，就会被行权了，如果差距不大，算上权利金总体还能是赚钱的。&lt;/p>
&lt;h3 id="正股下跌亏">正股下跌（亏？）&lt;/h3>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210529K1ZA5Y.jpg!m" alt="">&lt;/p>
&lt;p>上图是我 3 月 30 号卖的 AMD Put 期权，行权价是 80，我希望股票上涨，但是接下来股票一路下跌，我被迫行权，以 80 的价格买入 100 股 AMD 股票。&lt;/p>
&lt;p>但是如果我们长期看过 AMD 股票，认为它长期还是上涨的话，我们可以在&lt;strong>到期日&lt;/strong>收盘前，买入一张 21040180 AMD Put 期权来平仓，然后再卖出同样行权价的期权，比方说 21040980 AMD Put 期权，这种方式可以一直重复操作，直到赚钱，这种方式：&lt;/p>
&lt;ul>
&lt;li>不必占用大量资金去行权&lt;/li>
&lt;li>如果股票只是小跌还能算上权利金还可能是赚钱的&lt;/li>
&lt;/ul>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>总的来说，买期权我们的目的是赚取权利金，期权策略选的好，在股市动荡的时候我们也能赚钱。自从学了期权之后看股票的走势就会多了一个视角，大部分股票的行权日都是每个星期五，所以那一天股价通常波动比较大。&lt;/p>
&lt;p>⚠️ 另外要补充一点，卖期权只适合股价波动比较小的股票，比方说 FUTU 富途 这个股票就不适合这种方式。&lt;/p>
&lt;p>今天的文章就分享到这，如果你喜欢我的期权系列文章，记得点赞 ➕ 关注。后面我会分享前一段时间我交易富途股票期权的惊险刺激经历。&lt;/p></description></item><item><title>【深度阅读 第四季 01】金融投资课</title><link>https://blog.forecho.com/readeep-s04e01.html</link><pubDate>Fri, 07 May 2021 16:40:58 +0800</pubDate><guid>https://blog.forecho.com/readeep-s04e01.html</guid><description>&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210507S6UOh6.jpg!m" alt="《陈志武金融投资课》">&lt;/p>
&lt;h2 id="一段话说明这本书主要讲什么">一段话说明『这本书主要讲什么？』&lt;/h2>
&lt;p>主要是讲述了以下三个问题：&lt;/p>
&lt;ul>
&lt;li>金融有什么用？&lt;/li>
&lt;li>金融如何帮助财富增长？&lt;/li>
&lt;li>金融如何规避风险？&lt;/li>
&lt;/ul>
&lt;h2 id="印象深刻点">印象深刻点&lt;/h2>
&lt;p>本书内容有点多，400 多页，但是内容都是通俗易懂，而且有趣。下面我就来讲一下我学到了哪些：&lt;/p>
&lt;h3 id="犹太人为何主宰金融世界">犹太人为何主宰金融世界？&lt;/h3>
&lt;p>简单来讲就是犹太教对圣经的解读不同，基督教不允许借钱收利息，而犹太教可以，那个时候借钱收利息是为数不多的金融手段，所有犹太人越来越有钱。&lt;/p>
&lt;p>又因为犹太人有被屠杀的历史，所有让所有的犹太人有一种共同的情感，两个陌生的犹太人更容易建立信任，而信任在金融市场是非常宝贵的。&lt;/p>
&lt;h3 id="为什么古代贪官很多">为什么古代贪官很多？&lt;/h3>
&lt;p>因为古代没有完善的金融市场，科举考试之后，做官需要很多的路费，对于穷苦人家只能去到处借钱，先找亲戚然后再找朋友、家族。找人借钱就是欠人情，人情债难还。&lt;/p>
&lt;h3 id="为什么会有股市">为什么会有股市？&lt;/h3>
&lt;p>A 股创办之初是为了帮助企业融资，这是一个错误的定位。股市应该是鼓励大家去创业的，比方说马化腾创办了腾讯，现在腾讯市值 7 千多亿美元，这会在社会上树立一个榜样，鼓励大家去创业，那么自己能力不行的，可以通过购买优质的股票，通过股市也可以实现自己的财富增长。&lt;/p>
&lt;h3 id="a-股">A 股&lt;/h3>
&lt;p>作者吐槽了很多 A 股市场的「畸形」：&lt;/p>
&lt;ul>
&lt;li>监证会的偏向&lt;/li>
&lt;li>上市公司要强制分红，而不是选择合适的时候分红。如果公司处于强烈竞争时期，这笔分红的钱可以为公司赢得更多市场。&lt;/li>
&lt;li>对上市公司要求很严格，没有实现盈利的公司不能上市，现在我终于知道为什么很多互联网公司都去纳斯达克上市了，因为他们可以去那边上市。&lt;/li>
&lt;li>很难做空，好的公司股票应该上涨，那么差的公司股票就应该跌，但是因为 A 股没有做空机制，所以这是不健康的市场。&lt;/li>
&lt;li>不是有效市场，同涨同跌的个股有超过 90%，大家无法分辨好坏，无法惩罚坏公司，奖励好公司。&lt;/li>
&lt;li>对上市公司内幕交易、造假处罚不够严厉，小散户维权很难，得不到保障&lt;/li>
&lt;/ul>
&lt;p>我能记得的就这么多了，反正看了之后挺害怕的，虽然我没买 A 股个股，但是我买的基金都是股票型的，整个 A 股市场都这了，我还能幸免于难吗？&lt;/p>
&lt;h3 id="股票回购是怎么回事">股票回购是怎么回事？&lt;/h3>
&lt;p>以前不懂公司回购自己的股票是为什么？书上解释了，如果股票分红，派息是要收税的，公司通过回购的方式可以让股票大涨，回馈股东。&lt;/p>
&lt;h3 id="派息是好是坏">派息是好是坏？&lt;/h3>
&lt;p>刚开始觉得派息好，微软就是派息的，但是一个成长性的公司，应该把钱拿去创造更多的价值，这样股票才会涨。所以一般派息给股东的都是比较稳定的企业了，他们的股票也相对比较稳定了。&lt;/p>
&lt;h2 id="推荐理由">推荐理由&lt;/h2>
&lt;p>这本书的作者是陈志武，华人经济学家，香港大学冯氏基金讲席与亚洲环球研究所所长、原耶鲁大学金融学终身，曾获得默顿·米勒奖。&lt;/p>
&lt;p>书的内容对投资小白来说很值得一看，我虽然投资了 3 年多的美股，看完之后也有很多收获。我能记得的知识点就以上几个了，书中内容肯定不止这么多，如果你对此书感兴趣的话，推荐你自己把书找来读读，内容非常通俗易懂的好读。&lt;/p></description></item><item><title>【深度理财27】交易期权容易犯的错</title><link>https://blog.forecho.com/financedeep-27.html</link><pubDate>Mon, 26 Apr 2021 17:09:00 +0800</pubDate><guid>https://blog.forecho.com/financedeep-27.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>上个月写了两篇期权干货文章了：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.forecho.com/financedeep-23.html">【深度理财23】什么是期权&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.forecho.com/financedeep-24.html">【深度理财24】期权交易基本策略&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>之前内容比较干，今天来点湿货，我来谈谈这三个月来我交易期权学到的经验。&lt;/p>
&lt;blockquote>
&lt;p>加一个风险提示：本篇文章仅代表我的个人观点，不构成与其他人相关的任何投资建议。在作出任何投资决定前，投资者应根据自身情况考虑投资产品相关的风险因素，并于需要时咨询专业投资顾问意见。&lt;/p>
&lt;/blockquote>
&lt;h2 id="容易犯的错">容易犯的错&lt;/h2>
&lt;h3 id="以为到了行权价就能赚钱">以为到了行权价就能赚钱&lt;/h3>
&lt;p>现在回过头来总结，没想到我刚期权没多久就开启了美股成长股「熊市」，而我持仓大部分都是成长股，全部中招。刚开始为了挽回收益损失，我用了期权抄底，以为到了行权价就能赚回。&lt;/p>
&lt;p>其实期权到期日如果到了行权价，你不一定会赚钱，如果期权买的价格很贵，也会亏钱。简单举个例子，我前一段时间买了一张 SNAP210423C60000 的期权，它的含义是：&lt;/p>
&lt;ul>
&lt;li>一张 SNAP 的 Call 期权&lt;/li>
&lt;li>行权价为 60&lt;/li>
&lt;li>到期日为 2021-04-23&lt;/li>
&lt;/ul>
&lt;p>这张期权我买了三张，平均成本价为 4.1，那么截止到 2021-04-23 SNAP 股票价格至少要到 64.1 我才能赚钱，如果跌到 60 以下，我这个期权就是废纸。&lt;/p>
&lt;p>PUT 期权也是类似的，也要算是期权成本价。所以在买期权的时候，一定要把成本+行权价一起考虑。&lt;/p>
&lt;h3 id="加仓期权">加仓期权&lt;/h3>
&lt;p>买期权时，如果期权亏了很多，请谨慎加仓期权，因为期权亏了，说明期权行权价和正股价格越来越远，说明离行权目标越来越远，这个时候你加仓，大概率钱会赔完。&lt;/p>
&lt;p>股票跌了加仓，只要是优质的股票，会有涨回来的一天，但是期权就不同了，期权有时间期限。股票行情不好的时候，横盘一两个月是有的，但是你可能只买了一个月到期的期权，期权没等到那天就归零了，这就意味着你损失了筹码。&lt;/p>
&lt;p>如果真的想加仓的话，可以考虑换一个行权价买入。&lt;/p>
&lt;h3 id="交易不太活跃的期权">交易不太活跃的期权&lt;/h3>
&lt;p>不太活跃的期权，意味着期权买卖溢价高，买入和卖出价格相差比较大。选择期权的时候一定要考虑到这个问题。当然到时候你指望行权那也是可以的。&lt;/p>
&lt;p>最好选择流动性比较好，交易量大的期权。&lt;/p>
&lt;h3 id="重仓期权">重仓期权&lt;/h3>
&lt;p>如果重仓期权，一次输了会让你万劫不复。期权本身就有点赌博的性质，所以一定要控制期权仓位。&lt;/p>
&lt;h3 id="不关注市场消息">不关注市场消息&lt;/h3>
&lt;p>市场消息对股票短期价格影响很大，这意味着期权也会受到更大的影响，比方说前一阵子，小米公司在闭市之前宣布造车，我的小米看涨期权立马从亏损到翻倍状态。所以如果你交易期权需要关注：&lt;/p>
&lt;ul>
&lt;li>重要市场消息&lt;/li>
&lt;li>财报信息&lt;/li>
&lt;li>宏观经济调控&lt;/li>
&lt;/ul>
&lt;h3 id="没策略或者计划">没策略或者计划&lt;/h3>
&lt;ul>
&lt;li>交易期权之前一定先选好交易策略，看涨、看跌、还是对冲风险？&lt;/li>
&lt;li>什么时候止盈？&lt;/li>
&lt;li>最多能承受多少亏损？&lt;/li>
&lt;/ul>
&lt;h3 id="不了解期权基本知识">不了解期权基本知识&lt;/h3>
&lt;p>不了解期权基本知识就开始交易期权是非常危险的，期权不比股票，股票买了你可以长期拿着不动就能赚钱，但是期权不行，期权有时间价值，即使股票横盘，期权也会亏钱。&lt;/p>
&lt;p>所以一定要学好基本知识再开始使用期权，少亏点钱。&lt;/p>
&lt;h2 id="常见问题">常见问题&lt;/h2>
&lt;h3 id="sell-put-没到达行权价格会怎么样">Sell Put 没到达行权价格会怎么样？&lt;/h3>
&lt;ul>
&lt;li>Sell Put 如果截止日的时候&lt;strong>到了&lt;/strong>行权价格，那么买方就不会行权，你就赚到了权利金。&lt;/li>
&lt;li>Sell Put 如果截止日的时候&lt;strong>没到&lt;/strong>行权价格，那么买方就会行权，你会使用被冻结的资金以行权价买入指定数量的股票，权利金全部归你。&lt;/li>
&lt;/ul>
&lt;h3 id="buy-call-没到达行权价格会怎么样">Buy Call 没到达行权价格会怎么样？&lt;/h3>
&lt;ul>
&lt;li>Buy Put 如果截止日的时候&lt;strong>到了&lt;/strong>行权价格，请确保有足够的资金行权，如果资金不够，期权会被强制卖出（平仓）。&lt;/li>
&lt;li>Buy Put 如果截止日的时候&lt;strong>没到&lt;/strong>行权价格，期权归零。&lt;/li>
&lt;/ul>
&lt;h3 id="sell-put-不想行权怎么办">Sell Put 不想行权怎么办？&lt;/h3>
&lt;p>在到期日之前买入期权，平仓即可。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>这篇文章主要介绍了交易期权容易犯的错，回顾一下主要有以下几点：&lt;/p>
&lt;ul>
&lt;li>以为到了行权价就能赚钱：买期权的时候，一定要把成本+行权价一起考虑&lt;/li>
&lt;li>加仓期权：谨慎操作，加仓期权不比加仓股票&lt;/li>
&lt;li>交易不太活跃的期权：买入容易卖出难&lt;/li>
&lt;li>重仓期权：输了就万劫不复&lt;/li>
&lt;li>不关注市场消息：找死&lt;/li>
&lt;li>不了解期权基本知识：送钱&lt;/li>
&lt;/ul>
&lt;p>如果你喜欢我的期权系列文章，记得点赞 ➕ 关注。后面我会分享几次我交易期权的经历，包括赚钱的和不赚钱的。&lt;/p></description></item><item><title>【深度理财26】随机买股票实验结局</title><link>https://blog.forecho.com/financedeep-26.html</link><pubDate>Fri, 23 Apr 2021 16:09:00 +0800</pubDate><guid>https://blog.forecho.com/financedeep-26.html</guid><description>&lt;h2 id="引言">引言&lt;/h2>
&lt;p>两周前因为 A 股市场太让人沮丧了，而正好我看到一个好玩儿的事情，于是我就跟风做了一个实验，详情请看&lt;a href="https://blog.forecho.com/financedeep-25.html">《【深度理财25】随机买股票实验》&lt;/a>。&lt;/p>
&lt;p>今天收盘前把之前的两支股票卖了，先说说结果，总体是亏钱了。&lt;/p>
&lt;h2 id="卖股">卖股&lt;/h2>
&lt;p>赶在收盘前卖一个好价格，下面是这两个的卖出价格&lt;/p>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/202104237E7G4T.JPEG!m" alt="">&lt;/p>
&lt;p>盈亏统计我也算好了，两个公式分别是：&lt;/p>
&lt;ul>
&lt;li>盈亏 = 卖出总金额-买入总金额-卖出手续费-买入手续费&lt;/li>
&lt;li>盈亏比例 = 盈亏/买入总金额*100&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://blog-1251237404.cos.ap-guangzhou.myqcloud.com/20210423Ei4i4y.png" alt="">&lt;/p>
&lt;p>所以总的来说我亏了 331.2 = 358.1-26.9 😭😭&lt;/p>
&lt;h2 id="复盘">复盘&lt;/h2>
&lt;p>因为那天选股的方式效率很低，而且我开始玩的时候离收盘时间只有半个多小时，所以那天选股的时候有点着急，导致我事后才发现&lt;strong>上海洗霸&lt;/strong>其实不是我选出来的！！你回去看图就知道了上海洗霸股票代码是 &lt;code>603200&lt;/code> 而我选的代码是 &lt;code>03200&lt;/code>，当时着急没仔细看就买了。&lt;/p>
&lt;p>而且这货今天跌了 6% 😭😭&lt;/p>
&lt;p>结局是我亲自选的&lt;code>三安光电&lt;/code>最后盈利了，而错选的&lt;code>上海洗霸&lt;/code>，虽然最后总的来说是亏钱了，但是这点倒是让我挺欣慰的。&lt;/p>
&lt;h2 id="最后">最后&lt;/h2>
&lt;p>总的来说我明白了几点：&lt;/p>
&lt;ul>
&lt;li>分散投资确实很重要，还好一个涨一个跌&lt;/li>
&lt;li>A 股的涨跌有点没逻辑，所以我还是坚持不买 A 股个股&lt;/li>
&lt;/ul></description></item></channel></rss>